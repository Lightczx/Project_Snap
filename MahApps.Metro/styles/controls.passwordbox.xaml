<?xml version="1.0" encoding="utf-8"?>
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:Behaviors="clr-namespace:MahApps.Metro.Behaviours" xmlns:Controls="clr-namespace:MahApps.Metro.Controls" xmlns:Converters="clr-namespace:MahApps.Metro.Converters">
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Shared.xaml" />
    <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.Buttons.xaml" />
  </ResourceDictionary.MergedDictionaries>
  <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
  <Converters:StringToVisibilityConverter x:Key="StringToVisibilityConverter" />
  <Converters:StringToVisibilityConverter x:Key="StringToOppositeVisibilityConverter" OppositeStringValue="True" />
  <Grid x:Key="RevealButtonIcon" Width="16" Height="16" Background="{DynamicResource BlackBrush}" Opacity="0.8">
    <Grid.OpacityMask>
      <VisualBrush>
        <VisualBrush.Visual>
          <Canvas Width="42" Height="25.8461">
            <Path Canvas.Left="17" Canvas.Top="25.0769" Data="F1M38,33.1538C40.6765,33.1538 42.8462,35.3235 42.8462,38 42.8462,40.6765 40.6765,42.8461 38,42.8461 35.3235,42.8461 33.1539,40.6765 33.1539,38 33.1539,35.3235 35.3236,33.1538 38,33.1538z M38,25.0769C49.3077,25.0769 59,33.1538 59,38 59,42.8461 49.3077,50.9231 38,50.9231 26.6923,50.9231 17,42.8461 17,38 17,33.1538 26.6923,25.0769 38,25.0769z M38,29.1154C33.0932,29.1154 29.1154,33.0932 29.1154,38 29.1154,42.9068 33.0932,46.8846 38,46.8846 42.9068,46.8846 46.8846,42.9068 46.8846,38 46.8846,33.0932 42.9068,29.1154 38,29.1154z" Fill="#FF000000" Stretch="Fill" />
          </Canvas>
        </VisualBrush.Visual>
      </VisualBrush>
    </Grid.OpacityMask>
  </Grid>
  <Style x:Key="RevealButtonStyle" BasedOn="{StaticResource ChromelessButtonStyle}" TargetType="{x:Type ButtonBase}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ButtonBase}">
          <Grid Background="{TemplateBinding Control.Background}">
            <ContentPresenter Name="PART_ContentPresenter" Margin="{TemplateBinding Control.Padding}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="PART_ContentPresenter" Property="UIElement.Opacity" Value="1" />
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="False">
              <Setter TargetName="PART_ContentPresenter" Property="UIElement.Opacity" Value=".5" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ContentControl x:Key="DefaultRevealButtonIcon" Width="Auto" Height="Auto" Padding="2" HorizontalAlignment="Center" VerticalAlignment="Center" Content="M12,9A3,3 0 0,0 9,12A3,3 0 0,0 12,15A3,3 0 0,0 15,12A3,3 0 0,0 12,9M12,17A5,5 0 0,1 7,12A5,5 0 0,1 12,7A5,5 0 0,1 17,12A5,5 0 0,1 12,17M12,4.5C7,4.5 2.73,7.61 1,12C2.73,16.39 7,19.5 12,19.5C17,19.5 21.27,16.39 23,12C21.27,7.61 17,4.5 12,4.5Z" Style="{DynamicResource PathIconContentControlStyle}" />
  <Grid x:Key="DefaultCapsLockIcon" Width="16" Height="16" Background="{DynamicResource BlackBrush}" Opacity="0.8">
    <Grid.OpacityMask>
      <VisualBrush>
        <VisualBrush.Visual>
          <Canvas Width="24" Height="24">
            <Path Data="M13,14L11,14 11,10 13,10 M13,18L11,18 11,16 13,16 M1,21L23,21 12,2 1,21z" Fill="#FF000000" />
          </Canvas>
        </VisualBrush.Visual>
      </VisualBrush>
    </Grid.OpacityMask>
  </Grid>
  <Style x:Key="MetroPasswordBox" TargetType="{x:Type PasswordBox}">
    <Setter Property="Control.Background" Value="{DynamicResource ControlBackgroundBrush}" />
    <Setter Property="Behaviors:StylizedBehaviors.Behaviors">
      <Setter.Value>
        <Behaviors:StylizedBehaviorCollection>
          <Behaviors:PasswordBoxBindingBehavior />
        </Behaviors:StylizedBehaviorCollection>
      </Setter.Value>
    </Setter>
    <Setter Property="Control.BorderBrush" Value="{DynamicResource TextBoxBorderBrush}" />
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="PasswordBox.CaretBrush" Value="{DynamicResource BlackBrush}" />
    <Setter Property="FrameworkElement.ContextMenu" Value="{DynamicResource TextBoxMetroContextMenu}" />
    <Setter Property="Controls:ControlsHelper.FocusBorderBrush" Value="{DynamicResource TextBoxFocusBorderBrush}" />
    <Setter Property="Controls:ControlsHelper.MouseOverBorderBrush" Value="{DynamicResource TextBoxMouseOverBorderBrush}" />
    <Setter Property="Controls:PasswordBoxHelper.CapsLockIcon" Value="{StaticResource DefaultCapsLockIcon}" />
    <Setter Property="Controls:TextBoxHelper.ButtonFontSize" Value="{DynamicResource ClearTextButtonFontSize}" />
    <Setter Property="Controls:TextBoxHelper.ButtonWidth" Value="22" />
    <Setter Property="Controls:TextBoxHelper.IsMonitoring" Value="True" />
    <Setter Property="Control.FontFamily" Value="{DynamicResource ContentFontFamily}" />
    <Setter Property="Control.FontSize" Value="{DynamicResource ContentFontSize}" />
    <Setter Property="Control.Foreground" Value="{DynamicResource TextBrush}" />
    <Setter Property="FrameworkElement.MinHeight" Value="26" />
    <Setter Property="Control.Padding" Value="0" />
    <Setter Property="PasswordBox.SelectionBrush" Value="{DynamicResource HighlightBrush}" />
    <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type PasswordBox}">
          <ControlTemplate.Resources>
            <Storyboard x:Key="enterGotFocus">
              <DoubleAnimation Storyboard.TargetName="PART_Message" Storyboard.TargetProperty="Opacity" To=".2" Duration="0:0:0.2" />
            </Storyboard>
            <Storyboard x:Key="exitGotFocus">
              <DoubleAnimation Storyboard.TargetName="PART_Message" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" />
            </Storyboard>
            <Storyboard x:Key="enterHasText">
              <DoubleAnimation Storyboard.TargetName="PART_Message" Storyboard.TargetProperty="Opacity" From=".2" To="0" Duration="0:0:0.2" />
            </Storyboard>
            <Storyboard x:Key="exitHasText">
              <DoubleAnimation Storyboard.TargetName="PART_Message" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" />
            </Storyboard>
          </ControlTemplate.Resources>
          <Grid>
            <AdornerDecorator Name="PART_WaitingForDataEffectAdornerDecorator" Visibility="Collapsed">
              <Border Name="PART_WaitingForDataEffectGrid" Background="{TemplateBinding Control.Background}" BorderBrush="#00FFFFFF" BorderThickness="{TemplateBinding Control.BorderThickness}" Effect="{DynamicResource WaitingForDataEffect}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
            </AdornerDecorator>
            <Border Name="Base" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
            <Grid Margin="2">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Name="TextColumn" Width="*" />
                <ColumnDefinition Name="CapsLockColumn" Width="Auto" />
                <ColumnDefinition Name="ButtonColumn" Width="Auto" />
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Name="ButtonRow" Height="*" />
              </Grid.RowDefinitions>
              <ScrollViewer Name="PART_ContentHost" Grid.Row="1" Grid.Column="0" Margin="2" VerticalAlignment="Stretch" BorderThickness="0" IsTabStop="False" Background="{x:Null}" />
              <TextBlock Name="PART_Message" Grid.Row="1" Grid.Column="0" Margin="6 2 6 2" Padding="{TemplateBinding Control.Padding}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" TextBlock.Foreground="{TemplateBinding Control.Foreground}" Style="{DynamicResource MahApps.Metro.Styles.MetroWatermarkTextBlock}" Text="{TemplateBinding Controls:TextBoxHelper.Watermark}" TextBlock.TextAlignment="{TemplateBinding Controls:TextBoxHelper.WatermarkAlignment}" TextTrimming="{TemplateBinding Controls:TextBoxHelper.WatermarkTrimming}" Visibility="Collapsed" />
              <ContentControl Name="PART_FloatingMessageContainer" Grid.Row="0" Grid.Column="0" Style="{DynamicResource FloatingMessageContainerStyle}">
                <ContentControl.Height>
                  <MultiBinding>
                    <MultiBinding.Converter>
                      <Converters:MathMultiplyConverter />
                    </MultiBinding.Converter>
                    <Binding ElementName="PART_FloatingMessage" Mode="OneWay" Path="ActualHeight" />
                    <Binding ElementName="PART_FloatingMessageContainer" Mode="OneWay" Path="Opacity" />
                  </MultiBinding>
                </ContentControl.Height>
                <TextBlock Name="PART_FloatingMessage" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" TextBlock.Foreground="{TemplateBinding Control.Foreground}" Style="{DynamicResource MetroAutoCollapsingTextBlock}" Text="{TemplateBinding Controls:TextBoxHelper.Watermark}" TextBlock.TextAlignment="{TemplateBinding Controls:TextBoxHelper.WatermarkAlignment}" TextTrimming="{TemplateBinding Controls:TextBoxHelper.WatermarkTrimming}">
                  <TextBlock.RenderTransform>
                    <TranslateTransform x:Name="FloatingMessageTransform">
                      <TranslateTransform.Y>
                        <MultiBinding>
                          <MultiBinding.Converter>
                            <Converters:MathSubtractConverter />
                          </MultiBinding.Converter>
                          <Binding ElementName="PART_FloatingMessage" Mode="OneWay" Path="ActualHeight" />
                          <Binding ElementName="PART_FloatingMessageContainer" Mode="OneWay" Path="ActualHeight" />
                        </MultiBinding>
                      </TranslateTransform.Y>
                    </TranslateTransform>
                  </TextBlock.RenderTransform>
                </TextBlock>
              </ContentControl>
              <ContentPresenter Name="PART_CapsLockIndicator" Grid.Row="0" Grid.RowSpan="2" Grid.Column="1" Margin="1" HorizontalAlignment="Right" VerticalAlignment="Center" TextBlock.Foreground="{DynamicResource ControlsValidationBrush}" Visibility="Collapsed" Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:PasswordBoxHelper.CapsLockIcon), Mode=TwoWay}" ToolTip="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:PasswordBoxHelper.CapsLockWarningToolTip), Mode=OneWay}" />
              <Button Name="PART_ClearText" Grid.Row="0" Grid.RowSpan="2" Grid.Column="2" Width="{TemplateBinding Controls:TextBoxHelper.ButtonWidth}" Content="{TemplateBinding Controls:TextBoxHelper.ButtonContent}" ContentTemplate="{TemplateBinding Controls:TextBoxHelper.ButtonContentTemplate}" Focusable="False" FontFamily="{TemplateBinding Controls:TextBoxHelper.ButtonFontFamily}" FontSize="{TemplateBinding Controls:TextBoxHelper.ButtonFontSize}" Foreground="{TemplateBinding Control.Foreground}" IsTabStop="False" Style="{DynamicResource ChromelessButtonStyle}" Controls:TextBoxHelper.IsClearTextButtonBehaviorEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:TextBoxHelper.ClearTextButton), Mode=OneWay}" Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:TextBoxHelper.ClearTextButton), Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}" />
            </Grid>
            <Border Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" BorderBrush="{DynamicResource ControlsDisabledBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.DisabledVisualElementVisibility), Mode=OneWay}" />
          </Grid>
          <ControlTemplate.Triggers>
            <DataTrigger Value="Left" Binding="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:TextBoxHelper.ButtonsAlignment)}">
              <Setter TargetName="ButtonColumn" Property="ColumnDefinition.Width" Value="*" />
              <Setter TargetName="PART_ClearText" Property="Grid.Column" Value="0" />
              <Setter TargetName="PART_ContentHost" Property="Grid.Column" Value="2" />
              <Setter TargetName="PART_FloatingMessageContainer" Property="Grid.Column" Value="2" />
              <Setter TargetName="PART_Message" Property="Grid.Column" Value="2" />
              <Setter TargetName="TextColumn" Property="ColumnDefinition.Width" Value="Auto" />
            </DataTrigger>
            <DataTrigger Value="" Binding="{Binding RelativeSource={RelativeSource Self}, Path=Password, Mode=OneWay}">
              <Setter TargetName="PART_Message" Property="UIElement.Visibility" Value="Visible" />
            </DataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding Path=IsVisible, RelativeSource={RelativeSource Self}}" Value="True" />
                <Condition Binding="{Binding Path=(Controls:TextBoxHelper.UseFloatingWatermark), RelativeSource={RelativeSource Self}}" Value="True" />
                <Condition Binding="{Binding Path=(Controls:TextBoxHelper.HasText), RelativeSource={RelativeSource Self}}" Value="True" />
              </MultiDataTrigger.Conditions>
              <MultiDataTrigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource ShowFloatingMessageStoryboard}" />
              </MultiDataTrigger.EnterActions>
              <MultiDataTrigger.ExitActions>
                <BeginStoryboard Storyboard="{StaticResource HideFloatingMessageStoryboard}" />
              </MultiDataTrigger.ExitActions>
            </MultiDataTrigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="Base" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.MouseOverBorderBrush)}" Property="Border.BorderBrush" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter TargetName="DisabledVisualElement" Property="UIElement.Opacity" Value="0.6" />
            </Trigger>
            <Trigger Property="UIElement.IsFocused" Value="True">
              <Setter TargetName="Base" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.FocusBorderBrush)}" Property="Border.BorderBrush" />
              <Setter TargetName="PART_FloatingMessage" Value="{DynamicResource AccentColorBrush}" Property="TextBlock.Foreground" />
              <Setter TargetName="PART_FloatingMessage" Property="UIElement.Opacity" Value="1" />
            </Trigger>
            <Trigger SourceName="PART_ClearText" Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="PART_ClearText" Value="{DynamicResource GrayBrush8}" Property="Control.Background" />
              <Setter TargetName="PART_ClearText" Value="{DynamicResource AccentColorBrush}" Property="Control.Foreground" />
            </Trigger>
            <Trigger SourceName="PART_ClearText" Property="ButtonBase.IsPressed" Value="True">
              <Setter TargetName="PART_ClearText" Value="{DynamicResource BlackBrush}" Property="Control.Background" />
              <Setter TargetName="PART_ClearText" Value="{DynamicResource WhiteBrush}" Property="Control.Foreground" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="Controls:TextBoxHelper.HasText" Value="False" />
                <Condition Property="UIElement.IsFocused" Value="True" />
              </MultiTrigger.Conditions>
              <MultiTrigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource enterGotFocus}" />
              </MultiTrigger.EnterActions>
              <MultiTrigger.ExitActions>
                <BeginStoryboard Storyboard="{StaticResource exitGotFocus}" />
              </MultiTrigger.ExitActions>
            </MultiTrigger>
            <Trigger Property="Controls:TextBoxHelper.HasText" Value="True">
              <Setter TargetName="PART_Message" Property="UIElement.Visibility" Value="Visible" />
              <Trigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource enterHasText}" />
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <BeginStoryboard Storyboard="{StaticResource exitHasText}" />
              </Trigger.ExitActions>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="UIElement.IsVisible" Value="True" />
                <Condition Property="Controls:TextBoxHelper.IsWaitingForData" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="PART_WaitingForDataEffectAdornerDecorator" Property="UIElement.Visibility" Value="Visible" />
              <MultiTrigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource WaitingForDataStoryboard}" />
              </MultiTrigger.EnterActions>
            </MultiTrigger>
            <Trigger Property="Controls:TextBoxHelper.IsWaitingForData" Value="False">
              <Setter TargetName="PART_WaitingForDataEffectAdornerDecorator" Property="UIElement.Visibility" Value="Collapsed" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource ValidationErrorTemplate}" />
  </Style>
  <Style x:Key="MetroButtonPasswordBox" BasedOn="{StaticResource MetroPasswordBox}" TargetType="{x:Type PasswordBox}">
    <Setter Property="Controls:TextBoxHelper.ButtonTemplate" Value="{DynamicResource ChromelessButtonTemplate}" />
    <Setter Property="Controls:TextBoxHelper.TextButton" Value="True" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type PasswordBox}">
          <ControlTemplate.Resources>
            <Storyboard x:Key="enterGotFocus">
              <DoubleAnimation Storyboard.TargetName="PART_Message" Storyboard.TargetProperty="Opacity" To=".2" Duration="0:0:0.2" />
            </Storyboard>
            <Storyboard x:Key="exitGotFocus">
              <DoubleAnimation Storyboard.TargetName="PART_Message" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" />
            </Storyboard>
            <Storyboard x:Key="enterHasText">
              <DoubleAnimation Storyboard.TargetName="PART_Message" Storyboard.TargetProperty="Opacity" From=".2" To="0" Duration="0:0:0.2" />
            </Storyboard>
            <Storyboard x:Key="exitHasText">
              <DoubleAnimation Storyboard.TargetName="PART_Message" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" />
            </Storyboard>
          </ControlTemplate.Resources>
          <Grid>
            <AdornerDecorator Name="PART_WaitingForDataEffectAdornerDecorator" Visibility="Collapsed">
              <Border Name="PART_WaitingForDataEffectGrid" Background="{TemplateBinding Control.Background}" BorderBrush="#00FFFFFF" BorderThickness="{TemplateBinding Control.BorderThickness}" Effect="{DynamicResource WaitingForDataEffect}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
            </AdornerDecorator>
            <Border Name="Base" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
            <Grid Name="PART_InnerGrid" Margin="2">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Name="TextColumn" Width="*" />
                <ColumnDefinition Name="CapsLockColumn" Width="Auto" />
                <ColumnDefinition Name="ButtonColumn" Width="Auto" />
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Name="ButtonRow" Height="*" />
              </Grid.RowDefinitions>
              <ScrollViewer Name="PART_ContentHost" Grid.Row="1" Grid.Column="0" Margin="2" VerticalAlignment="Stretch" BorderThickness="0" IsTabStop="False" Background="{x:Null}" />
              <TextBlock Name="PART_Message" Grid.Row="1" Grid.Column="0" Margin="6 2 6 2" Padding="{TemplateBinding Control.Padding}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" TextBlock.Foreground="{TemplateBinding Control.Foreground}" Style="{DynamicResource MahApps.Metro.Styles.MetroWatermarkTextBlock}" Text="{TemplateBinding Controls:TextBoxHelper.Watermark}" TextBlock.TextAlignment="{TemplateBinding Controls:TextBoxHelper.WatermarkAlignment}" TextTrimming="{TemplateBinding Controls:TextBoxHelper.WatermarkTrimming}" Visibility="Collapsed" />
              <ContentControl Name="PART_FloatingMessageContainer" Grid.Row="0" Grid.Column="0" Style="{DynamicResource FloatingMessageContainerStyle}">
                <ContentControl.Height>
                  <MultiBinding>
                    <MultiBinding.Converter>
                      <Converters:MathMultiplyConverter />
                    </MultiBinding.Converter>
                    <Binding ElementName="PART_FloatingMessage" Mode="OneWay" Path="ActualHeight" />
                    <Binding ElementName="PART_FloatingMessageContainer" Mode="OneWay" Path="Opacity" />
                  </MultiBinding>
                </ContentControl.Height>
                <TextBlock Name="PART_FloatingMessage" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" TextBlock.Foreground="{TemplateBinding Control.Foreground}" Style="{DynamicResource MetroAutoCollapsingTextBlock}" Text="{TemplateBinding Controls:TextBoxHelper.Watermark}" TextBlock.TextAlignment="{TemplateBinding Controls:TextBoxHelper.WatermarkAlignment}" TextTrimming="{TemplateBinding Controls:TextBoxHelper.WatermarkTrimming}">
                  <TextBlock.RenderTransform>
                    <TranslateTransform x:Name="FloatingMessageTransform">
                      <TranslateTransform.Y>
                        <MultiBinding>
                          <MultiBinding.Converter>
                            <Converters:MathSubtractConverter />
                          </MultiBinding.Converter>
                          <Binding ElementName="PART_FloatingMessage" Mode="OneWay" Path="ActualHeight" />
                          <Binding ElementName="PART_FloatingMessageContainer" Mode="OneWay" Path="ActualHeight" />
                        </MultiBinding>
                      </TranslateTransform.Y>
                    </TranslateTransform>
                  </TextBlock.RenderTransform>
                </TextBlock>
              </ContentControl>
              <ContentPresenter Name="PART_CapsLockIndicator" Grid.Row="0" Grid.RowSpan="2" Grid.Column="1" Margin="1" HorizontalAlignment="Right" VerticalAlignment="Center" TextBlock.Foreground="{DynamicResource ControlsValidationBrush}" Visibility="Collapsed" Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:PasswordBoxHelper.CapsLockIcon), Mode=TwoWay}" ToolTip="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:PasswordBoxHelper.CapsLockWarningToolTip), Mode=OneWay}" />
              <Button Name="PART_ClearText" Grid.Row="0" Grid.RowSpan="2" Grid.Column="2" Width="{TemplateBinding Controls:TextBoxHelper.ButtonWidth}" Controls:TextBoxHelper.IsClearTextButtonBehaviorEnabled="True" Content="{TemplateBinding Controls:TextBoxHelper.ButtonContent}" ContentTemplate="{TemplateBinding Controls:TextBoxHelper.ButtonContentTemplate}" Focusable="False" FontFamily="{TemplateBinding Controls:TextBoxHelper.ButtonFontFamily}" FontSize="{TemplateBinding Controls:TextBoxHelper.ButtonFontSize}" Foreground="{TemplateBinding Control.Foreground}" IsTabStop="False" Style="{DynamicResource ChromelessButtonStyle}" Template="{TemplateBinding Controls:TextBoxHelper.ButtonTemplate}" Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:TextBoxHelper.TextButton), Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}" />
            </Grid>
            <Border Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" BorderBrush="{DynamicResource ControlsDisabledBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.DisabledVisualElementVisibility), Mode=OneWay}" />
          </Grid>
          <ControlTemplate.Triggers>
            <DataTrigger Value="Left" Binding="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:TextBoxHelper.ButtonsAlignment)}">
              <Setter TargetName="ButtonColumn" Property="ColumnDefinition.Width" Value="*" />
              <Setter TargetName="PART_ClearText" Property="Grid.Column" Value="0" />
              <Setter TargetName="PART_ContentHost" Property="Grid.Column" Value="2" />
              <Setter TargetName="PART_FloatingMessageContainer" Property="Grid.Column" Value="2" />
              <Setter TargetName="PART_Message" Property="Grid.Column" Value="2" />
              <Setter TargetName="TextColumn" Property="ColumnDefinition.Width" Value="Auto" />
            </DataTrigger>
            <DataTrigger Value="" Binding="{Binding RelativeSource={RelativeSource Self}, Path=Password, Mode=OneWay}">
              <Setter TargetName="PART_Message" Property="UIElement.Visibility" Value="Visible" />
            </DataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding Path=IsVisible, RelativeSource={RelativeSource Self}}" Value="True" />
                <Condition Binding="{Binding Path=(Controls:TextBoxHelper.UseFloatingWatermark), RelativeSource={RelativeSource Self}}" Value="True" />
                <Condition Binding="{Binding Path=(Controls:TextBoxHelper.HasText), RelativeSource={RelativeSource Self}}" Value="True" />
              </MultiDataTrigger.Conditions>
              <MultiDataTrigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource ShowFloatingMessageStoryboard}" />
              </MultiDataTrigger.EnterActions>
              <MultiDataTrigger.ExitActions>
                <BeginStoryboard Storyboard="{StaticResource HideFloatingMessageStoryboard}" />
              </MultiDataTrigger.ExitActions>
            </MultiDataTrigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="Base" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.MouseOverBorderBrush)}" Property="Border.BorderBrush" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter TargetName="DisabledVisualElement" Property="UIElement.Opacity" Value="0.6" />
            </Trigger>
            <Trigger Property="UIElement.IsFocused" Value="True">
              <Setter TargetName="Base" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.FocusBorderBrush)}" Property="Border.BorderBrush" />
              <Setter TargetName="PART_FloatingMessage" Value="{DynamicResource AccentColorBrush}" Property="TextBlock.Foreground" />
              <Setter TargetName="PART_FloatingMessage" Property="UIElement.Opacity" Value="1" />
            </Trigger>
            <Trigger SourceName="PART_ClearText" Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="PART_ClearText" Value="{DynamicResource GrayBrush8}" Property="Control.Background" />
              <Setter TargetName="PART_ClearText" Value="{DynamicResource AccentColorBrush}" Property="Control.Foreground" />
            </Trigger>
            <Trigger SourceName="PART_ClearText" Property="ButtonBase.IsPressed" Value="True">
              <Setter TargetName="PART_ClearText" Value="{DynamicResource BlackBrush}" Property="Control.Background" />
              <Setter TargetName="PART_ClearText" Value="{DynamicResource WhiteBrush}" Property="Control.Foreground" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="Controls:TextBoxHelper.HasText" Value="False" />
                <Condition Property="UIElement.IsFocused" Value="True" />
              </MultiTrigger.Conditions>
              <MultiTrigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource enterGotFocus}" />
              </MultiTrigger.EnterActions>
              <MultiTrigger.ExitActions>
                <BeginStoryboard Storyboard="{StaticResource exitGotFocus}" />
              </MultiTrigger.ExitActions>
            </MultiTrigger>
            <Trigger Property="Controls:TextBoxHelper.HasText" Value="True">
              <Setter TargetName="PART_Message" Property="UIElement.Visibility" Value="Visible" />
              <Trigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource enterHasText}" />
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <BeginStoryboard Storyboard="{StaticResource exitHasText}" />
              </Trigger.ExitActions>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="UIElement.IsVisible" Value="True" />
                <Condition Property="Controls:TextBoxHelper.IsWaitingForData" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="PART_WaitingForDataEffectAdornerDecorator" Property="UIElement.Visibility" Value="Visible" />
              <MultiTrigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource WaitingForDataStoryboard}" />
              </MultiTrigger.EnterActions>
            </MultiTrigger>
            <Trigger Property="Controls:TextBoxHelper.IsWaitingForData" Value="False">
              <Setter TargetName="PART_WaitingForDataEffectAdornerDecorator" Property="UIElement.Visibility" Value="Collapsed" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="RevealedTextBoxStyle" TargetType="{x:Type TextBox}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TextBox}">
          <Grid Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}">
            <ScrollViewer Name="PART_ContentHost" Margin="{TemplateBinding Control.Padding}" BorderThickness="0" IsTabStop="False" Background="{x:Null}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MetroButtonRevealedPasswordBox" BasedOn="{StaticResource MetroPasswordBox}" TargetType="{x:Type PasswordBox}">
    <Setter Property="Controls:PasswordBoxHelper.RevealButtonContent" Value="{DynamicResource DefaultRevealButtonIcon}" />
    <Setter Property="Controls:TextBoxHelper.ButtonTemplate" Value="{DynamicResource ChromelessButtonTemplate}" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type PasswordBox}">
          <ControlTemplate.Resources>
            <Storyboard x:Key="enterGotFocus">
              <DoubleAnimation Storyboard.TargetName="PART_Message" Storyboard.TargetProperty="Opacity" To=".2" Duration="0:0:0.2" />
            </Storyboard>
            <Storyboard x:Key="exitGotFocus">
              <DoubleAnimation Storyboard.TargetName="PART_Message" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" />
            </Storyboard>
            <Storyboard x:Key="enterHasText">
              <DoubleAnimation Storyboard.TargetName="PART_Message" Storyboard.TargetProperty="Opacity" From=".2" To="0" Duration="0:0:0.2" />
            </Storyboard>
            <Storyboard x:Key="exitHasText">
              <DoubleAnimation Storyboard.TargetName="PART_Message" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" />
            </Storyboard>
          </ControlTemplate.Resources>
          <Grid>
            <AdornerDecorator Name="PART_WaitingForDataEffectAdornerDecorator" Visibility="Collapsed">
              <Border Name="PART_WaitingForDataEffectGrid" Background="{TemplateBinding Control.Background}" BorderBrush="#00FFFFFF" BorderThickness="{TemplateBinding Control.BorderThickness}" Effect="{DynamicResource WaitingForDataEffect}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
            </AdornerDecorator>
            <Border Name="Base" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
            <Grid Name="PART_InnerGrid" Margin="2">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Name="TextColumn" Width="*" />
                <ColumnDefinition Name="CapsLockColumn" Width="Auto" />
                <ColumnDefinition Name="RevealButtonColumn" Width="Auto" />
                <ColumnDefinition Name="ButtonColumn" Width="Auto" />
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Name="ButtonRow" Height="*" />
              </Grid.RowDefinitions>
              <ScrollViewer Name="PART_ContentHost" Grid.Row="1" Grid.Column="0" Margin="2" VerticalAlignment="Stretch" BorderThickness="0" IsTabStop="False" Background="{x:Null}" />
              <TextBox Name="RevealedPassword" Grid.Row="1" Grid.Column="0" Margin="2" Padding="{TemplateBinding Control.Padding}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Background="{TemplateBinding Control.Background}" BorderThickness="0" CaretBrush="{TemplateBinding PasswordBox.CaretBrush}" FontFamily="{TemplateBinding Control.FontFamily}" FontSize="{TemplateBinding Control.FontSize}" Foreground="{TemplateBinding Control.Foreground}" SelectionBrush="{TemplateBinding PasswordBox.SelectionBrush}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Style="{DynamicResource RevealedTextBoxStyle}" Text="{TemplateBinding Behaviors:PasswordBoxBindingBehavior.Password}" Visibility="Hidden" FocusManager.FocusedElement="{Binding RelativeSource={RelativeSource Self}}" />
              <TextBlock Name="PART_Message" Grid.Row="1" Grid.Column="0" Margin="6 2 6 2" Padding="{TemplateBinding Control.Padding}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" TextBlock.Foreground="{TemplateBinding Control.Foreground}" Style="{DynamicResource MahApps.Metro.Styles.MetroWatermarkTextBlock}" Text="{TemplateBinding Controls:TextBoxHelper.Watermark}" TextBlock.TextAlignment="{TemplateBinding Controls:TextBoxHelper.WatermarkAlignment}" TextTrimming="{TemplateBinding Controls:TextBoxHelper.WatermarkTrimming}" Visibility="Collapsed" />
              <ContentControl Name="PART_FloatingMessageContainer" Grid.Row="0" Grid.Column="0" Style="{DynamicResource FloatingMessageContainerStyle}">
                <ContentControl.Height>
                  <MultiBinding>
                    <MultiBinding.Converter>
                      <Converters:MathMultiplyConverter />
                    </MultiBinding.Converter>
                    <Binding ElementName="PART_FloatingMessage" Mode="OneWay" Path="ActualHeight" />
                    <Binding ElementName="PART_FloatingMessageContainer" Mode="OneWay" Path="Opacity" />
                  </MultiBinding>
                </ContentControl.Height>
                <TextBlock Name="PART_FloatingMessage" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" TextBlock.Foreground="{TemplateBinding Control.Foreground}" Style="{DynamicResource MetroAutoCollapsingTextBlock}" Text="{TemplateBinding Controls:TextBoxHelper.Watermark}" TextBlock.TextAlignment="{TemplateBinding Controls:TextBoxHelper.WatermarkAlignment}" TextTrimming="{TemplateBinding Controls:TextBoxHelper.WatermarkTrimming}">
                  <TextBlock.RenderTransform>
                    <TranslateTransform x:Name="FloatingMessageTransform">
                      <TranslateTransform.Y>
                        <MultiBinding>
                          <MultiBinding.Converter>
                            <Converters:MathSubtractConverter />
                          </MultiBinding.Converter>
                          <Binding ElementName="PART_FloatingMessage" Mode="OneWay" Path="ActualHeight" />
                          <Binding ElementName="PART_FloatingMessageContainer" Mode="OneWay" Path="ActualHeight" />
                        </MultiBinding>
                      </TranslateTransform.Y>
                    </TranslateTransform>
                  </TextBlock.RenderTransform>
                </TextBlock>
              </ContentControl>
              <ContentPresenter Name="PART_CapsLockIndicator" Grid.Row="0" Grid.RowSpan="2" Grid.Column="1" Margin="1" HorizontalAlignment="Right" VerticalAlignment="Center" TextBlock.Foreground="{DynamicResource ControlsValidationBrush}" Visibility="Collapsed" Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:PasswordBoxHelper.CapsLockIcon), Mode=TwoWay}" ToolTip="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:PasswordBoxHelper.CapsLockWarningToolTip), Mode=OneWay}" />
              <Button Name="PART_RevealButton" Grid.Row="0" Grid.RowSpan="2" Grid.Column="2" Width="{TemplateBinding Controls:TextBoxHelper.ButtonWidth}" Content="{TemplateBinding Controls:PasswordBoxHelper.RevealButtonContent}" ContentTemplate="{TemplateBinding Controls:PasswordBoxHelper.RevealButtonContentTemplate}" Focusable="False" Foreground="{TemplateBinding Control.Foreground}" IsTabStop="False" Style="{DynamicResource RevealButtonStyle}" Visibility="{Binding ElementName=RevealedPassword, Path=Text, Converter={StaticResource StringToVisibilityConverter}}" />
              <Button Name="PART_ClearText" Grid.Row="0" Grid.RowSpan="2" Grid.Column="3" Width="{TemplateBinding Controls:TextBoxHelper.ButtonWidth}" Content="{TemplateBinding Controls:TextBoxHelper.ButtonContent}" ContentTemplate="{TemplateBinding Controls:TextBoxHelper.ButtonContentTemplate}" Focusable="False" FontFamily="{TemplateBinding Controls:TextBoxHelper.ButtonFontFamily}" FontSize="{TemplateBinding Controls:TextBoxHelper.ButtonFontSize}" Foreground="{TemplateBinding Control.Foreground}" IsTabStop="False" Style="{DynamicResource ChromelessButtonStyle}" Template="{TemplateBinding Controls:TextBoxHelper.ButtonTemplate}" Controls:TextBoxHelper.IsClearTextButtonBehaviorEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:TextBoxHelper.ClearTextButton), Mode=OneWay}" Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:TextBoxHelper.ClearTextButton), Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}" />
            </Grid>
            <Border Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" BorderBrush="{DynamicResource ControlsDisabledBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.DisabledVisualElementVisibility), Mode=OneWay}" />
          </Grid>
          <ControlTemplate.Triggers>
            <DataTrigger Value="Left" Binding="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:TextBoxHelper.ButtonsAlignment)}">
              <Setter TargetName="ButtonColumn" Property="ColumnDefinition.Width" Value="*" />
              <Setter TargetName="PART_CapsLockIndicator" Property="Grid.Column" Value="2" />
              <Setter TargetName="PART_ClearText" Property="Grid.Column" Value="0" />
              <Setter TargetName="PART_ContentHost" Property="Grid.Column" Value="3" />
              <Setter TargetName="PART_FloatingMessageContainer" Property="Grid.Column" Value="3" />
              <Setter TargetName="PART_Message" Property="Grid.Column" Value="3" />
              <Setter TargetName="PART_RevealButton" Property="Grid.Column" Value="1" />
              <Setter TargetName="RevealedPassword" Property="Grid.Column" Value="3" />
              <Setter TargetName="TextColumn" Property="ColumnDefinition.Width" Value="Auto" />
            </DataTrigger>
            <DataTrigger Value="" Binding="{Binding RelativeSource={RelativeSource Self}, Path=Password, Mode=OneWay}">
              <Setter TargetName="PART_Message" Property="UIElement.Visibility" Value="Visible" />
            </DataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding Path=IsVisible, RelativeSource={RelativeSource Self}}" Value="True" />
                <Condition Binding="{Binding Path=(Controls:TextBoxHelper.UseFloatingWatermark), RelativeSource={RelativeSource Self}}" Value="True" />
                <Condition Binding="{Binding Path=(Controls:TextBoxHelper.HasText), RelativeSource={RelativeSource Self}}" Value="True" />
              </MultiDataTrigger.Conditions>
              <MultiDataTrigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource ShowFloatingMessageStoryboard}" />
              </MultiDataTrigger.EnterActions>
              <MultiDataTrigger.ExitActions>
                <BeginStoryboard Storyboard="{StaticResource HideFloatingMessageStoryboard}" />
              </MultiDataTrigger.ExitActions>
            </MultiDataTrigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="Base" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.MouseOverBorderBrush)}" Property="Border.BorderBrush" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter TargetName="DisabledVisualElement" Property="UIElement.Opacity" Value="0.6" />
            </Trigger>
            <Trigger Property="UIElement.IsFocused" Value="True">
              <Setter TargetName="Base" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.FocusBorderBrush)}" Property="Border.BorderBrush" />
              <Setter TargetName="PART_FloatingMessage" Value="{DynamicResource AccentColorBrush}" Property="TextBlock.Foreground" />
              <Setter TargetName="PART_FloatingMessage" Property="UIElement.Opacity" Value="1" />
            </Trigger>
            <Trigger SourceName="PART_RevealButton" Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="PART_RevealButton" Value="{DynamicResource GrayBrush8}" Property="Control.Background" />
              <Setter TargetName="PART_RevealButton" Value="{DynamicResource AccentColorBrush}" Property="Control.Foreground" />
            </Trigger>
            <Trigger SourceName="PART_RevealButton" Property="ButtonBase.IsPressed" Value="True">
              <Setter TargetName="PART_ContentHost" Property="UIElement.Visibility" Value="Hidden" />
              <Setter TargetName="PART_RevealButton" Value="{DynamicResource BlackBrush}" Property="Control.Background" />
              <Setter TargetName="PART_RevealButton" Value="{DynamicResource WhiteBrush}" Property="Control.Foreground" />
              <Setter TargetName="RevealedPassword" Property="UIElement.Visibility" Value="Visible" />
            </Trigger>
            <Trigger SourceName="PART_ClearText" Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="PART_ClearText" Value="{DynamicResource GrayBrush8}" Property="Control.Background" />
              <Setter TargetName="PART_ClearText" Value="{DynamicResource AccentColorBrush}" Property="Control.Foreground" />
            </Trigger>
            <Trigger SourceName="PART_ClearText" Property="ButtonBase.IsPressed" Value="True">
              <Setter TargetName="PART_ClearText" Value="{DynamicResource BlackBrush}" Property="Control.Background" />
              <Setter TargetName="PART_ClearText" Value="{DynamicResource WhiteBrush}" Property="Control.Foreground" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="Controls:TextBoxHelper.HasText" Value="False" />
                <Condition Property="UIElement.IsFocused" Value="True" />
              </MultiTrigger.Conditions>
              <MultiTrigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource enterGotFocus}" />
              </MultiTrigger.EnterActions>
              <MultiTrigger.ExitActions>
                <BeginStoryboard Storyboard="{StaticResource exitGotFocus}" />
              </MultiTrigger.ExitActions>
            </MultiTrigger>
            <Trigger Property="Controls:TextBoxHelper.HasText" Value="True">
              <Setter TargetName="PART_Message" Property="UIElement.Visibility" Value="Visible" />
              <Trigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource enterHasText}" />
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <BeginStoryboard Storyboard="{StaticResource exitHasText}" />
              </Trigger.ExitActions>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="UIElement.IsVisible" Value="True" />
                <Condition Property="Controls:TextBoxHelper.IsWaitingForData" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="PART_WaitingForDataEffectAdornerDecorator" Property="UIElement.Visibility" Value="Visible" />
              <MultiTrigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource WaitingForDataStoryboard}" />
              </MultiTrigger.EnterActions>
            </MultiTrigger>
            <Trigger Property="Controls:TextBoxHelper.IsWaitingForData" Value="False">
              <Setter TargetName="PART_WaitingForDataEffectAdornerDecorator" Property="UIElement.Visibility" Value="Collapsed" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="Win8MetroPasswordBox" BasedOn="{StaticResource MetroButtonRevealedPasswordBox}" TargetType="{x:Type PasswordBox}">
    <Setter Property="UIElement.AllowDrop" Value="True" />
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="Control.FontSize" Value="15" />
  </Style>
</ResourceDictionary>
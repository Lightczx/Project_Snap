<?xml version="1.0" encoding="utf-8"?>
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:Controls="clr-namespace:MahApps.Metro.Controls">
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.CheckBox.xaml" />
  </ResourceDictionary.MergedDictionaries>
  <BooleanToVisibilityConverter x:Key="bool2VisibilityConverter" />
  <Style x:Key="MetroDataGridCheckBox" BasedOn="{StaticResource MetroCheckBox}" TargetType="{x:Type CheckBox}">
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center" />
    <Setter Property="FrameworkElement.Margin" Value="0" />
    <Setter Property="FrameworkElement.VerticalAlignment" Value="Center" />
    <Style.Triggers>
      <DataTrigger Binding="{Binding Path=IsReadOnly, RelativeSource={RelativeSource AncestorType=DataGridCell}}" Value="True">
        <Setter Property="UIElement.Focusable" Value="False" />
        <Setter Property="UIElement.IsHitTestVisible" Value="False" />
      </DataTrigger>
      <DataTrigger Binding="{Binding Path=IsEditing, RelativeSource={RelativeSource AncestorType=DataGridCell}}" Value="False">
        <Setter Property="UIElement.Focusable" Value="False" />
        <Setter Property="UIElement.IsHitTestVisible" Value="False" />
      </DataTrigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{ComponentResourceKey ResourceId=MetroDataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}" TargetType="{x:Type Button}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid>
            <Rectangle Name="Border" Fill="{DynamicResource GrayBrush7}" />
            <Polygon Name="Arrow" Margin="8 8 3 3" HorizontalAlignment="Right" VerticalAlignment="Bottom" Fill="{DynamicResource GrayBrush1}" Opacity="0.15" Points="0,10 10,10 10,0" Stretch="Uniform" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
              <Setter TargetName="Border" Value="{DynamicResource AccentColorBrush2}" Property="Shape.Fill" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter TargetName="Arrow" Property="UIElement.Visibility" Value="Collapsed" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MetroColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
    <Setter Property="Control.Background" Value="{DynamicResource GrayBrush5}" />
    <Setter Property="FrameworkElement.Cursor" Value="SizeWE" />
    <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Border Margin="{TemplateBinding Control.Padding}" Background="#00FFFFFF" BorderBrush="{TemplateBinding Control.Background}" BorderThickness="0 0 1 0" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="FrameworkElement.Width" Value="8" />
  </Style>
  <Style x:Key="MetroRowHeaderGripperStyle" TargetType="{x:Type Thumb}">
    <Setter Property="Control.Background" Value="{DynamicResource GrayBrush5}" />
    <Setter Property="FrameworkElement.Cursor" Value="SizeNS" />
    <Setter Property="FrameworkElement.Height" Value="6" />
    <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Border Margin="{TemplateBinding Control.Padding}" Background="#00FFFFFF" BorderBrush="{TemplateBinding Control.Background}" BorderThickness="0 0 0 1" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MetroDataGridColumnHeader" TargetType="{x:Type DataGridColumnHeader}">
    <Setter Property="Control.Background" Value="{DynamicResource WhiteBrush}" />
    <Setter Property="Control.BorderBrush" Value="{DynamicResource GrayBrush5}" />
    <Setter Property="Control.BorderThickness" Value="0 0 0 3" />
    <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper" />
    <Setter Property="FrameworkElement.Cursor" Value="Hand" />
    <Setter Property="Control.FontWeight" Value="SemiBold" />
    <Setter Property="Control.Foreground" Value="{DynamicResource BlackBrush}" />
    <Setter Property="Control.HorizontalContentAlignment" Value="Left" />
    <Setter Property="FrameworkElement.Margin" Value="0" />
    <Setter Property="FrameworkElement.MinHeight" Value="25" />
    <Setter Property="FrameworkElement.MinWidth" Value="0" />
    <Setter Property="Control.Padding" Value="10 4 4 7" />
    <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Border Name="BackgroundBorder" Grid.ColumnSpan="2" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" />
            <Controls:ContentControlEx x:Name="HeaderContent" Padding="{TemplateBinding Control.Padding}" HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}" Content="{TemplateBinding ContentControl.Content}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentControl.ContentTemplateSelector}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.ContentCharacterCasing)}" />
            <Path Name="SortArrow" Grid.Column="1" Width="8" Height="10" Margin="0 0 8 2" VerticalAlignment="Center" Fill="{DynamicResource GrayBrush2}" RenderTransformOrigin="0.5,0.5" Stretch="Fill" Visibility="Collapsed" />
            <Thumb Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Background="#00FFFFFF" Style="{StaticResource MetroColumnHeaderGripperStyle}" />
            <Thumb Name="PART_RightHeaderGripper" Grid.Column="1" HorizontalAlignment="Right" Style="{StaticResource MetroColumnHeaderGripperStyle}" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="DataGridColumnHeader.SortDirection" Value="Ascending">
              <Setter TargetName="SortArrow" Property="Path.Data" Value="F1M34,57L42,57 42,32.25 52,42.25 52,31.75 38,17.75 24,31.75 24,42.25 34,32.25 34,57z" />
              <Setter TargetName="SortArrow" Property="UIElement.Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="DataGridColumnHeader.SortDirection" Value="Descending">
              <Setter TargetName="SortArrow" Property="Path.Data" Value="F1M42,19.0002L34,19.0002 34,43.7502 24,33.7502 24,44.2502 38,58.2502 52,44.2502 52,33.7502 42,43.7502 42,19.0002z" />
              <Setter TargetName="SortArrow" Property="FrameworkElement.Margin" Value="0 0 8 0" />
              <Setter TargetName="SortArrow" Property="UIElement.Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="DataGridColumnHeader.DisplayIndex" Value="0">
              <Setter TargetName="PART_LeftHeaderGripper" Property="UIElement.Visibility" Value="Collapsed" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Control.VerticalContentAlignment" Value="Center" />
    <Style.Triggers>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="UIElement.IsMouseOver" Value="True" />
          <Condition Property="DataGridColumnHeader.SortDirection" Value="{x:Null}" />
        </MultiTrigger.Conditions>
        <Setter Property="Control.Background" Value="{DynamicResource GrayBrush8}" />
      </MultiTrigger>
      <Trigger Property="UIElement.IsEnabled" Value="False">
        <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="MetroDataGridRowHeader" TargetType="{x:Type DataGridRowHeader}">
    <Setter Property="Control.Background" Value="#00FFFFFF" />
    <Setter Property="Control.BorderBrush" Value="{DynamicResource GrayBrush5}" />
    <Setter Property="Control.BorderThickness" Value="0 0 1 0" />
    <Setter Property="Control.HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="FrameworkElement.Margin" Value="0" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridRowHeader}">
          <Grid>
            <Border Margin="{TemplateBinding FrameworkElement.Margin}" Padding="{TemplateBinding Control.Padding}" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="True">
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                <Control Grid.Column="1" Focusable="False" SnapsToDevicePixels="False" Template="{Binding ValidationErrorTemplate, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}" Visibility="{Binding (Validation.HasError), Converter={StaticResource bool2VisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}" />
              </Grid>
            </Border>
            <Thumb Name="PART_TopHeaderGripper" VerticalAlignment="Top" Background="#00FFFFFF" Style="{StaticResource MetroRowHeaderGripperStyle}" />
            <Thumb Name="PART_BottomHeaderGripper" VerticalAlignment="Bottom" Style="{StaticResource MetroRowHeaderGripperStyle}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Control.VerticalContentAlignment" Value="Center" />
    <Style.Triggers>
      <Trigger Property="UIElement.IsMouseOver" Value="True">
        <Setter Property="Control.Background" Value="{DynamicResource AccentColorBrush3}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="MetroDataGridCell" TargetType="{x:Type DataGridCell}">
    <Setter Property="Control.Background" Value="#00FFFFFF" />
    <Setter Property="Control.BorderBrush" Value="#00FFFFFF" />
    <Setter Property="Controls:DataGridCellHelper.SelectionUnit" Value="{Binding Path=(Controls:DataGridRowHelper.SelectionUnit), Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}" />
    <Setter Property="Control.HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="Control.Padding" Value="0" />
    <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridCell}">
          <Border Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}">
            <ContentPresenter Margin="{TemplateBinding Control.Padding}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Content="{TemplateBinding ContentControl.Content}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Control.VerticalContentAlignment" Value="Center" />
    <Style.Triggers>
      <Trigger Property="DataGridCell.IsSelected" Value="True">
        <Setter Property="Control.Foreground" Value="{DynamicResource MetroDataGrid.HighlightTextBrush}" />
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="Controls:DataGridCellHelper.IsCellOrRowHeader" Value="True" />
          <Condition Property="DataGridCell.IsSelected" Value="True" />
        </MultiTrigger.Conditions>
        <Setter Property="Control.Background" Value="{DynamicResource MetroDataGrid.HighlightBrush}" />
        <Setter Property="Control.BorderBrush" Value="{DynamicResource MetroDataGrid.HighlightBrush}" />
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="Controls:DataGridCellHelper.IsCellOrRowHeader" Value="True" />
          <Condition Property="UIElement.IsKeyboardFocusWithin" Value="True" />
        </MultiTrigger.Conditions>
        <Setter Property="Control.BorderBrush" Value="{DynamicResource MetroDataGrid.FocusBorderBrush}" />
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="DataGridCell.IsSelected" Value="True" />
          <Condition Property="Selector.IsSelectionActive" Value="False" />
        </MultiTrigger.Conditions>
        <Setter Property="Control.Foreground" Value="{DynamicResource MetroDataGrid.InactiveSelectionHighlightTextBrush}" />
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="Controls:DataGridCellHelper.IsCellOrRowHeader" Value="True" />
          <Condition Property="DataGridCell.IsSelected" Value="True" />
          <Condition Property="Selector.IsSelectionActive" Value="False" />
        </MultiTrigger.Conditions>
        <Setter Property="Control.Background" Value="{DynamicResource MetroDataGrid.InactiveSelectionHighlightBrush}" />
        <Setter Property="Control.BorderBrush" Value="{DynamicResource MetroDataGrid.InactiveSelectionHighlightBrush}" />
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="Controls:DataGridCellHelper.IsCellOrRowHeader" Value="True" />
          <Condition Property="UIElement.IsMouseOver" Value="True" />
        </MultiTrigger.Conditions>
        <Setter Property="Control.Background" Value="{DynamicResource MetroDataGrid.MouseOverHighlightBrush}" />
        <Setter Property="Control.BorderBrush" Value="{DynamicResource MetroDataGrid.MouseOverHighlightBrush}" />
      </MultiTrigger>
      <Trigger Property="UIElement.IsEnabled" Value="False">
        <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="UIElement.IsEnabled" Value="False" />
          <Condition Property="DataGridCell.IsSelected" Value="True" />
        </MultiTrigger.Conditions>
        <Setter Property="Control.Foreground" Value="{DynamicResource MetroDataGrid.HighlightTextBrush}" />
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="Controls:DataGridCellHelper.IsCellOrRowHeader" Value="True" />
          <Condition Property="UIElement.IsEnabled" Value="False" />
          <Condition Property="DataGridCell.IsSelected" Value="True" />
        </MultiTrigger.Conditions>
        <Setter Property="Control.Background" Value="{DynamicResource MetroDataGrid.DisabledHighlightBrush}" />
        <Setter Property="Control.BorderBrush" Value="{DynamicResource MetroDataGrid.DisabledHighlightBrush}" />
      </MultiTrigger>
    </Style.Triggers>
  </Style>
  <ControlTemplate x:Key="DefaultRowValidationErrorTemplate">
    <Grid Margin="2 0 2 0" VerticalAlignment="Center" DataContext="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}, Path=(Validation.Errors).CurrentItem}" ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=DataContext.ErrorContent}">
      <Path Width="20" Height="20" Data="M31.630585,39.233818L56.261485,14.603018C56.879785,13.984618,57.882285,13.984618,58.500685,14.603018L83.131485,39.233818C83.749885,39.852218,83.749885,40.854718,83.131485,41.473018L58.500685,66.103918C57.882385,66.722218,56.879785,66.722218,56.261485,66.103918L31.630585,41.473018C31.012285,40.854718,31.012285,39.852218,31.630585,39.233818z" Fill="{DynamicResource ControlsValidationBrush}" Stretch="Uniform" />
      <Path Width="10" Height="10" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M53.781741,31.196677C51.544017,31.196677 49.719241,33.021453 49.719241,35.259177 49.719241,37.496901 51.544017,39.321677 53.781741,39.321677 56.019465,39.321677 57.844241,37.496901 57.844241,35.259177 57.844241,33.021453 56.019465,31.196677 53.781741,31.196677z M49.687991,9.821677L49.719241,10.352927 50.937991,29.821677 56.625491,29.821677 57.875491,9.821677 49.687991,9.821677z" Fill="{DynamicResource ValidationTextBrush}" Stretch="Uniform" />
    </Grid>
  </ControlTemplate>
  <Style x:Key="MetroDataGridRow" TargetType="{x:Type DataGridRow}">
    <Setter Property="Controls:DataGridRowHelper.SelectionUnit" Value="{Binding Path=SelectionUnit, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
    <Setter Property="FrameworkElement.Margin" Value="0 0 0 0" />
    <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
    <Setter Property="DataGridRow.ValidationErrorTemplate" Value="{StaticResource DefaultRowValidationErrorTemplate}" />
    <Style.Triggers>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="Controls:DataGridRowHelper.SelectionUnit" Value="FullRow" />
          <Condition Property="DataGridRow.IsSelected" Value="True" />
        </MultiTrigger.Conditions>
        <Setter Property="Control.Background" Value="{DynamicResource MetroDataGrid.HighlightBrush}" />
        <Setter Property="Control.BorderBrush" Value="{DynamicResource MetroDataGrid.HighlightBrush}" />
        <Setter Property="Control.Foreground" Value="{DynamicResource MetroDataGrid.HighlightTextBrush}" />
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="Controls:DataGridRowHelper.SelectionUnit" Value="FullRow" />
          <Condition Property="DataGridRow.IsSelected" Value="True" />
          <Condition Property="Selector.IsSelectionActive" Value="False" />
        </MultiTrigger.Conditions>
        <Setter Property="Control.Background" Value="{DynamicResource MetroDataGrid.InactiveSelectionHighlightBrush}" />
        <Setter Property="Control.BorderBrush" Value="{DynamicResource MetroDataGrid.InactiveSelectionHighlightBrush}" />
        <Setter Property="Control.Foreground" Value="{DynamicResource MetroDataGrid.InactiveSelectionHighlightTextBrush}" />
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="Controls:DataGridRowHelper.SelectionUnit" Value="FullRow" />
          <Condition Property="UIElement.IsMouseOver" Value="True" />
        </MultiTrigger.Conditions>
        <Setter Property="Control.Background" Value="{DynamicResource MetroDataGrid.MouseOverHighlightBrush}" />
        <Setter Property="Control.BorderBrush" Value="{DynamicResource MetroDataGrid.MouseOverHighlightBrush}" />
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="Controls:DataGridRowHelper.SelectionUnit" Value="FullRow" />
          <Condition Property="UIElement.IsEnabled" Value="False" />
        </MultiTrigger.Conditions>
        <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="Controls:DataGridRowHelper.SelectionUnit" Value="FullRow" />
          <Condition Property="UIElement.IsEnabled" Value="False" />
          <Condition Property="DataGridRow.IsSelected" Value="True" />
        </MultiTrigger.Conditions>
        <Setter Property="Control.Background" Value="{DynamicResource MetroDataGrid.DisabledHighlightBrush}" />
        <Setter Property="Control.BorderBrush" Value="{DynamicResource MetroDataGrid.DisabledHighlightBrush}" />
        <Setter Property="Control.Foreground" Value="{DynamicResource MetroDataGrid.HighlightTextBrush}" />
      </MultiTrigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="MetroDataGrid" TargetType="{x:Type DataGrid}">
    <Setter Property="Control.Background" Value="{DynamicResource WhiteBrush}" />
    <Setter Property="Control.BorderBrush" Value="{DynamicResource AccentColorBrush}" />
    <Setter Property="Control.BorderThickness" Value="0 0 0 0" />
    <Setter Property="DataGrid.CellStyle" Value="{StaticResource MetroDataGridCell}" />
    <Setter Property="DataGrid.ColumnHeaderStyle" Value="{StaticResource MetroDataGridColumnHeader}" />
    <Setter Property="DataGrid.DropLocationIndicatorStyle">
      <Setter.Value>
        <Style TargetType="{x:Type Separator}">
          <Setter Property="Control.Background" Value="{DynamicResource GrayBrush7}" />
          <Setter Property="Control.Template">
            <Setter.Value>
              <ControlTemplate TargetType="{x:Type Separator}">
                <Rectangle Width="{TemplateBinding FrameworkElement.Width}" Height="{TemplateBinding FrameworkElement.Height}" Fill="{TemplateBinding Control.Background}" />
              </ControlTemplate>
            </Setter.Value>
          </Setter>
          <Setter Property="FrameworkElement.Width" Value="2" />
        </Style>
      </Setter.Value>
    </Setter>
    <Setter Property="DataGrid.GridLinesVisibility" Value="None" />
    <Setter Property="DataGrid.HeadersVisibility" Value="Column" />
    <Setter Property="DataGrid.HorizontalGridLinesBrush" Value="{DynamicResource GrayBrush7}" />
    <Setter Property="DataGrid.MinRowHeight" Value="25" />
    <Setter Property="DataGrid.RowHeaderStyle" Value="{StaticResource MetroDataGridRowHeader}" />
    <Setter Property="DataGrid.RowStyle" Value="{StaticResource MetroDataGridRow}" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGrid}">
          <Border Padding="{TemplateBinding Control.Padding}" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="True">
            <ScrollViewer Name="DG_ScrollViewer" Focusable="False">
              <ScrollViewer.Template>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                  <Grid>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="*" />
                      <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="*" />
                      <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Button Command="{x:Static DataGrid.SelectAllCommand}" Focusable="False" Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Style="{DynamicResource {ComponentResourceKey ResourceId=MetroDataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                    <DataGridColumnHeadersPresenter Name="PART_ColumnHeadersPresenter" Grid.Column="1" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                    <Grid Grid.Row="1" Grid.ColumnSpan="2">
                      <ScrollContentPresenter Name="PART_ScrollContentPresenter" Grid.ColumnSpan="2" CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}" />
                    </Grid>
                    <ScrollBar Name="PART_VerticalScrollBar" Grid.Row="1" Grid.Column="2" Maximum="{TemplateBinding ScrollViewer.ScrollableHeight}" Orientation="Vertical" ViewportSize="{TemplateBinding ScrollViewer.ViewportHeight}" Visibility="{TemplateBinding ScrollViewer.ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                    <Grid Grid.Row="2" Grid.Column="1">
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                        <ColumnDefinition Width="*" />
                      </Grid.ColumnDefinitions>
                      <ScrollBar Name="PART_HorizontalScrollBar" Grid.Column="1" Maximum="{TemplateBinding ScrollViewer.ScrollableWidth}" Orientation="Horizontal" ViewportSize="{TemplateBinding ScrollViewer.ViewportWidth}" Visibility="{TemplateBinding ScrollViewer.ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Grid>
                  </Grid>
                </ControlTemplate>
              </ScrollViewer.Template>
              <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
            </ScrollViewer>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="DataGrid.VerticalGridLinesBrush" Value="{DynamicResource GrayBrush7}" />
    <Style.Triggers>
      <Trigger Property="ItemsControl.IsGrouping" Value="True">
        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="AzureDataGridColumnHeader" BasedOn="{StaticResource MetroDataGridColumnHeader}" TargetType="{x:Type DataGridColumnHeader}">
    <Setter Property="FrameworkElement.Margin" Value="0 0 0 10" />
  </Style>
  <Style x:Key="AzureDataGridRowHeader" BasedOn="{StaticResource MetroDataGridRowHeader}" TargetType="{x:Type DataGridRowHeader}">
    <Setter Property="Control.BorderThickness" Value="0" />
  </Style>
  <Style x:Key="AzureDataGridCell" BasedOn="{StaticResource MetroDataGridCell}" TargetType="{x:Type DataGridCell}">
    <Setter Property="Control.BorderThickness" Value="0" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridCell}">
          <Border Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}">
            <ContentPresenter Margin="1" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Content="{TemplateBinding ContentControl.Content}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <DataTrigger Binding="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=Column.DisplayIndex}" Value="0">
        <Setter Property="Control.Background" Value="{DynamicResource AccentColorBrush4}" />
      </DataTrigger>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=Column.DisplayIndex}" Value="0" />
          <Condition Binding="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=IsSelected}" Value="True" />
        </MultiDataTrigger.Conditions>
        <Setter Property="Control.Background" Value="{DynamicResource AccentColorBrush2}" />
      </MultiDataTrigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="AzureDataGridRow" BasedOn="{StaticResource MetroDataGridRow}" TargetType="{x:Type DataGridRow}" />
  <Style x:Key="AzureDataGridRowWithMargin" BasedOn="{StaticResource AzureDataGridRow}" TargetType="{x:Type DataGridRow}">
    <Setter Property="FrameworkElement.Margin" Value="0 0 0 1" />
  </Style>
  <Style x:Key="AzureDataGrid" BasedOn="{StaticResource MetroDataGrid}" TargetType="{x:Type DataGrid}">
    <Setter Property="DataGrid.CellStyle" Value="{StaticResource AzureDataGridCell}" />
    <Setter Property="DataGrid.ColumnHeaderStyle" Value="{StaticResource AzureDataGridColumnHeader}" />
    <Setter Property="DataGrid.RowHeaderStyle" Value="{StaticResource AzureDataGridRowHeader}" />
    <Setter Property="DataGrid.RowStyle" Value="{StaticResource AzureDataGridRow}" />
    <Style.Triggers>
      <Trigger Property="DataGrid.GridLinesVisibility" Value="None">
        <Setter Property="DataGrid.RowStyle" Value="{StaticResource AzureDataGridRowWithMargin}" />
      </Trigger>
    </Style.Triggers>
  </Style>
</ResourceDictionary>
<?xml version="1.0" encoding="utf-8"?>
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:Controls="clr-namespace:MahApps.Metro.Controls" xmlns:Converters="clr-namespace:MahApps.Metro.Converters" xmlns:behaviours="clr-namespace:MahApps.Metro.Behaviours" xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity">
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Shared.xaml" />
  </ResourceDictionary.MergedDictionaries>
  <Style x:Key="MetroDatePicker" TargetType="{x:Type DatePicker}">
    <Setter Property="Control.Background" Value="{DynamicResource ControlBackgroundBrush}" />
    <Setter Property="Control.BorderBrush" Value="{DynamicResource TextBoxBorderBrush}" />
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="DatePicker.CalendarStyle" Value="{DynamicResource MahApps.Metro.Styles.BaseMetroCalendar}" />
    <Setter Property="Controls:ControlsHelper.FocusBorderBrush" Value="{DynamicResource TextBoxFocusBorderBrush}" />
    <Setter Property="Controls:ControlsHelper.MouseOverBorderBrush" Value="{DynamicResource TextBoxMouseOverBorderBrush}" />
    <Setter Property="Controls:TextBoxHelper.ButtonWidth" Value="22" />
    <Setter Property="Controls:TextBoxHelper.IsMonitoring" Value="True" />
    <Setter Property="Control.FontFamily" Value="{DynamicResource ContentFontFamily}" />
    <Setter Property="Control.FontSize" Value="{DynamicResource ContentFontSize}" />
    <Setter Property="Control.Foreground" Value="{DynamicResource TextBrush}" />
    <Setter Property="DatePicker.IsTodayHighlighted" Value="True" />
    <Setter Property="FrameworkElement.MinHeight" Value="26" />
    <Setter Property="Control.Padding" Value="2" />
    <Setter Property="DatePicker.SelectedDateFormat" Value="Short" />
    <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DatePicker}">
          <Grid Name="PART_Root">
            <Border Name="Base" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
            <Grid Name="PART_InnerGrid" Margin="{TemplateBinding Control.Padding}">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Name="ButtonColumn" Width="Auto" />
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Name="ButtonRow" Height="*" />
              </Grid.RowDefinitions>
              <Button Name="PART_Button" Grid.RowSpan="2" Grid.Column="1" Foreground="{TemplateBinding Control.Foreground}" IsTabStop="False" Style="{DynamicResource ChromelessButtonStyle}">
                <ContentControl Width="{TemplateBinding Controls:TextBoxHelper.ButtonWidth}" Height="{TemplateBinding Controls:TextBoxHelper.ButtonWidth}" Padding="2" Content="M34,52H31V38.5C29.66,39.9 28.16,40.78 26.34,41.45V37.76C27.3,37.45 28.34,36.86 29.46,36C30.59,35.15 31.36,34.15 31.78,33H34V52M45,52V48H37V45L45,33H48V45H50V48H48V52H45M45,45V38.26L40.26,45H45M18,57V23H23V20A2,2 0 0,1 25,18H29C30.11,18 31,18.9 31,20V23H45V20A2,2 0 0,1 47,18H51C52.11,18 53,18.9 53,20V23H58V57H18M21,54H55V31H21V54M48.5,20A1.5,1.5 0 0,0 47,21.5V24.5A1.5,1.5 0 0,0 48.5,26H49.5C50.34,26 51,25.33 51,24.5V21.5A1.5,1.5 0 0,0 49.5,20H48.5M26.5,20A1.5,1.5 0 0,0 25,21.5V24.5A1.5,1.5 0 0,0 26.5,26H27.5A1.5,1.5 0 0,0 29,24.5V21.5A1.5,1.5 0 0,0 27.5,20H26.5Z" Style="{DynamicResource PathIconContentControlStyle}" />
              </Button>
              <DatePickerTextBox Name="PART_TextBox" Grid.Row="1" Grid.Column="0" HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}" CaretBrush="{DynamicResource BlackBrush}" Focusable="{TemplateBinding UIElement.Focusable}" FontSize="{TemplateBinding Control.FontSize}" Foreground="{TemplateBinding Control.Foreground}" SelectionBrush="{DynamicResource HighlightBrush}" Controls:TextBoxHelper.Watermark="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:TextBoxHelper.Watermark), Mode=OneWay}" Controls:TextBoxHelper.WatermarkAlignment="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:TextBoxHelper.WatermarkAlignment), Mode=OneWay}" Controls:TextBoxHelper.WatermarkTrimming="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:TextBoxHelper.WatermarkTrimming), Mode=OneWay}">
                <Interaction.Behaviors>
                  <behaviours:DatePickerTextBoxBehavior />
                </Interaction.Behaviors>
              </DatePickerTextBox>
              <ContentControl Name="PART_FloatingMessageContainer" Grid.Row="0" Grid.Column="0" Style="{DynamicResource FloatingMessageContainerStyle}">
                <ContentControl.Height>
                  <MultiBinding>
                    <MultiBinding.Converter>
                      <Converters:MathMultiplyConverter />
                    </MultiBinding.Converter>
                    <Binding ElementName="PART_FloatingMessage" Mode="OneWay" Path="ActualHeight" />
                    <Binding ElementName="PART_FloatingMessageContainer" Mode="OneWay" Path="Opacity" />
                  </MultiBinding>
                </ContentControl.Height>
                <TextBlock Name="PART_FloatingMessage" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" TextBlock.Foreground="{TemplateBinding Control.Foreground}" Style="{DynamicResource MetroAutoCollapsingTextBlock}" Text="{TemplateBinding Controls:TextBoxHelper.Watermark}" TextBlock.TextAlignment="{TemplateBinding Controls:TextBoxHelper.WatermarkAlignment}" TextTrimming="{TemplateBinding Controls:TextBoxHelper.WatermarkTrimming}">
                  <TextBlock.RenderTransform>
                    <TranslateTransform x:Name="FloatingMessageTransform">
                      <TranslateTransform.Y>
                        <MultiBinding>
                          <MultiBinding.Converter>
                            <Converters:MathSubtractConverter />
                          </MultiBinding.Converter>
                          <Binding ElementName="PART_FloatingMessage" Mode="OneWay" Path="ActualHeight" />
                          <Binding ElementName="PART_FloatingMessageContainer" Mode="OneWay" Path="ActualHeight" />
                        </MultiBinding>
                      </TranslateTransform.Y>
                    </TranslateTransform>
                  </TextBlock.RenderTransform>
                </TextBlock>
              </ContentControl>
              <Popup Name="PART_Popup" Grid.Row="1" Grid.Column="0" AllowsTransparency="True" Placement="Bottom" StaysOpen="False" PlacementTarget="{Binding ElementName=PART_Root}" />
            </Grid>
            <Border Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" BorderBrush="{DynamicResource ControlsDisabledBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="Controls:ControlsHelper.IsReadOnly" Value="True">
              <Setter TargetName="PART_Button" Property="UIElement.IsEnabled" Value="False" />
              <Setter TargetName="PART_TextBox" Property="TextBoxBase.IsReadOnly" Value="True" />
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="Base" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.MouseOverBorderBrush)}" Property="Border.BorderBrush" />
            </Trigger>
            <Trigger SourceName="PART_TextBox" Property="UIElement.IsFocused" Value="True">
              <Setter TargetName="Base" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.FocusBorderBrush)}" Property="Border.BorderBrush" />
              <Setter TargetName="PART_FloatingMessage" Value="{DynamicResource AccentColorBrush}" Property="TextBlock.Foreground" />
              <Setter TargetName="PART_FloatingMessage" Property="UIElement.Opacity" Value="1" />
            </Trigger>
            <Trigger Property="UIElement.IsKeyboardFocusWithin" Value="True">
              <Setter TargetName="Base" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.FocusBorderBrush)}" Property="Border.BorderBrush" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter TargetName="DisabledVisualElement" Property="UIElement.Opacity" Value="0.6" />
            </Trigger>
            <Trigger SourceName="PART_Button" Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="PART_Button" Value="{DynamicResource GrayBrush8}" Property="Control.Background" />
              <Setter TargetName="PART_Button" Value="{DynamicResource AccentColorBrush}" Property="Control.Foreground" />
            </Trigger>
            <Trigger SourceName="PART_Button" Property="ButtonBase.IsPressed" Value="True">
              <Setter TargetName="PART_Button" Value="{DynamicResource BlackBrush}" Property="Control.Background" />
              <Setter TargetName="PART_Button" Value="{DynamicResource WhiteBrush}" Property="Control.Foreground" />
            </Trigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding Path=IsVisible, RelativeSource={RelativeSource Self}}" Value="True" />
                <Condition Binding="{Binding Path=(Controls:TextBoxHelper.UseFloatingWatermark), RelativeSource={RelativeSource Self}}" Value="True" />
                <Condition Binding="{Binding Path=(Controls:TextBoxHelper.HasText), RelativeSource={RelativeSource Self}}" Value="True" />
              </MultiDataTrigger.Conditions>
              <MultiDataTrigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource ShowFloatingMessageStoryboard}" />
              </MultiDataTrigger.EnterActions>
              <MultiDataTrigger.ExitActions>
                <BeginStoryboard Storyboard="{StaticResource HideFloatingMessageStoryboard}" />
              </MultiDataTrigger.ExitActions>
            </MultiDataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource ValidationErrorTemplate}" />
  </Style>
  <Style x:Key="MetroDatePickerTextBox" TargetType="{x:Type DatePickerTextBox}">
    <Setter Property="Control.Background" Value="{DynamicResource ControlBackgroundBrush}" />
    <Setter Property="FrameworkElement.ContextMenu" Value="{DynamicResource TextBoxMetroContextMenu}" />
    <Setter Property="Controls:TextBoxHelper.IsMonitoring" Value="True" />
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="Control.FontFamily" Value="{DynamicResource ContentFontFamily}" />
    <Setter Property="Control.FontSize" Value="{DynamicResource ContentFontSize}" />
    <Setter Property="Control.Foreground" Value="{DynamicResource TextBrush}" />
    <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DatePickerTextBox}">
          <ControlTemplate.Resources>
            <Storyboard x:Key="EnterGotFocus">
              <DoubleAnimation Storyboard.TargetName="PART_Watermark" Storyboard.TargetProperty="Opacity" To=".2" Duration="0:0:0.2" />
              <DoubleAnimation Storyboard.TargetName="PART_Message" Storyboard.TargetProperty="Opacity" To=".2" Duration="0:0:0.2" />
            </Storyboard>
            <Storyboard x:Key="ExitGotFocus">
              <DoubleAnimation Storyboard.TargetName="PART_Watermark" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" />
              <DoubleAnimation Storyboard.TargetName="PART_Message" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" />
            </Storyboard>
            <Storyboard x:Key="EnterHasText">
              <DoubleAnimation Storyboard.TargetName="PART_Watermark" Storyboard.TargetProperty="Opacity" From=".2" To="0" Duration="0:0:0.2" />
              <DoubleAnimation Storyboard.TargetName="PART_Message" Storyboard.TargetProperty="Opacity" From=".2" To="0" Duration="0:0:0.2" />
            </Storyboard>
            <Storyboard x:Key="ExitHasText">
              <DoubleAnimation Storyboard.TargetName="PART_Watermark" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" />
              <DoubleAnimation Storyboard.TargetName="PART_Message" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" />
            </Storyboard>
          </ControlTemplate.Resources>
          <Grid Name="PART_InnerGrid" Margin="2">
            <ScrollViewer Name="PART_ContentHost" VerticalAlignment="Stretch" BorderThickness="0" IsTabStop="False" Background="{x:Null}" FocusVisualStyle="{x:Null}" />
            <ContentControl Name="PART_Watermark" Margin="4 0 0 0" HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}" Controls:TextBoxHelper.WatermarkAlignment="{TemplateBinding Controls:TextBoxHelper.WatermarkAlignment}" Controls:TextBoxHelper.WatermarkTrimming="{TemplateBinding Controls:TextBoxHelper.WatermarkTrimming}" Focusable="False" Foreground="{TemplateBinding Control.Foreground}" IsHitTestVisible="False" Opacity="0.6" Visibility="Hidden">
              <ContentControl.Template>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                  <TextBlock HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Text="{TemplateBinding ContentControl.Content}" TextBlock.TextAlignment="{TemplateBinding Controls:TextBoxHelper.WatermarkAlignment}" TextTrimming="{TemplateBinding Controls:TextBoxHelper.WatermarkTrimming}" />
                </ControlTemplate>
              </ContentControl.Template>
            </ContentControl>
            <TextBlock Name="PART_Message" Margin="4 0 0 0" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" TextBlock.Foreground="{TemplateBinding Control.Foreground}" Style="{DynamicResource MahApps.Metro.Styles.MetroWatermarkTextBlock}" Text="{TemplateBinding Controls:TextBoxHelper.Watermark}" TextBlock.TextAlignment="{TemplateBinding Controls:TextBoxHelper.WatermarkAlignment}" TextTrimming="{TemplateBinding Controls:TextBoxHelper.WatermarkTrimming}" />
          </Grid>
          <ControlTemplate.Triggers>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="Controls:TextBoxHelper.HasText" Value="False" />
                <Condition Property="UIElement.IsFocused" Value="True" />
              </MultiTrigger.Conditions>
              <MultiTrigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource EnterGotFocus}" />
              </MultiTrigger.EnterActions>
              <MultiTrigger.ExitActions>
                <BeginStoryboard Storyboard="{StaticResource ExitGotFocus}" />
              </MultiTrigger.ExitActions>
            </MultiTrigger>
            <DataTrigger Value="" Binding="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:TextBoxHelper.Watermark)}">
              <Setter TargetName="PART_Watermark" Property="UIElement.Visibility" Value="Visible" />
            </DataTrigger>
            <Trigger Property="Controls:TextBoxHelper.HasText" Value="True">
              <Trigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource EnterHasText}" />
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <BeginStoryboard Storyboard="{StaticResource ExitHasText}" />
              </Trigger.ExitActions>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>
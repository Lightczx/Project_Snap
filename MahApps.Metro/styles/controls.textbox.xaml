<?xml version="1.0" encoding="utf-8"?>
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:Controls="clr-namespace:MahApps.Metro.Controls" xmlns:Converters="clr-namespace:MahApps.Metro.Converters">
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Shared.xaml" />
  </ResourceDictionary.MergedDictionaries>
  <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
  <Style x:Key="MetroTextBox" TargetType="{x:Type TextBox}">
    <Setter Property="Control.Background" Value="{DynamicResource ControlBackgroundBrush}" />
    <Setter Property="Control.BorderBrush" Value="{DynamicResource TextBoxBorderBrush}" />
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="TextBoxBase.CaretBrush" Value="{DynamicResource BlackBrush}" />
    <Setter Property="FrameworkElement.ContextMenu" Value="{DynamicResource TextBoxMetroContextMenu}" />
    <Setter Property="Controls:ControlsHelper.FocusBorderBrush" Value="{DynamicResource TextBoxFocusBorderBrush}" />
    <Setter Property="Controls:ControlsHelper.MouseOverBorderBrush" Value="{DynamicResource TextBoxMouseOverBorderBrush}" />
    <Setter Property="Controls:TextBoxHelper.ButtonFontSize" Value="{DynamicResource ClearTextButtonFontSize}" />
    <Setter Property="Controls:TextBoxHelper.ButtonWidth" Value="22" />
    <Setter Property="Controls:TextBoxHelper.IsMonitoring" Value="True" />
    <Setter Property="Controls:TextBoxHelper.IsSpellCheckContextMenuEnabled" Value="{Binding RelativeSource={RelativeSource Self}, Path=(SpellCheck.IsEnabled)}" />
    <Setter Property="Controls:TextBoxHelper.WatermarkWrapping" Value="{Binding RelativeSource={RelativeSource Self}, Path=TextWrapping, Mode=OneWay}" />
    <Setter Property="Control.FontFamily" Value="{DynamicResource ContentFontFamily}" />
    <Setter Property="Control.FontSize" Value="{DynamicResource ContentFontSize}" />
    <Setter Property="Control.Foreground" Value="{DynamicResource TextBrush}" />
    <Setter Property="FrameworkElement.MinHeight" Value="26" />
    <Setter Property="Control.Padding" Value="0" />
    <Setter Property="TextBoxBase.SelectionBrush" Value="{DynamicResource HighlightBrush}" />
    <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TextBox}">
          <ControlTemplate.Resources>
            <Storyboard x:Key="enterGotFocus">
              <DoubleAnimation Storyboard.TargetName="PART_Message" Storyboard.TargetProperty="Opacity" To=".2" Duration="0:0:0.2" />
            </Storyboard>
            <Storyboard x:Key="exitGotFocus">
              <DoubleAnimation Storyboard.TargetName="PART_Message" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" />
            </Storyboard>
            <Storyboard x:Key="enterHasText">
              <DoubleAnimation Storyboard.TargetName="PART_Message" Storyboard.TargetProperty="Opacity" From=".2" To="0" Duration="0:0:0.2" />
            </Storyboard>
            <Storyboard x:Key="exitHasText">
              <DoubleAnimation Storyboard.TargetName="PART_Message" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" />
            </Storyboard>
          </ControlTemplate.Resources>
          <Grid>
            <AdornerDecorator Name="PART_WaitingForDataEffectAdornerDecorator" Visibility="Collapsed">
              <Border Name="PART_WaitingForDataEffectGrid" Background="{TemplateBinding Control.Background}" BorderBrush="#00FFFFFF" BorderThickness="{TemplateBinding Control.BorderThickness}" Effect="{DynamicResource WaitingForDataEffect}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
            </AdornerDecorator>
            <Border Name="Base" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
            <Grid Name="PART_InnerGrid" Margin="2">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Name="TextColumn" Width="*" />
                <ColumnDefinition Name="ButtonColumn" Width="Auto" />
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Name="ButtonRow" Height="*" />
              </Grid.RowDefinitions>
              <ScrollViewer Name="PART_ContentHost" Grid.Row="1" Grid.Column="0" Margin="2" VerticalAlignment="Stretch" BorderThickness="0" IsTabStop="False" Background="{x:Null}" />
              <TextBlock Name="PART_Message" Grid.Row="1" Grid.Column="0" Margin="6 2 6 2" Padding="{TemplateBinding Control.Padding}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" TextBlock.Foreground="{TemplateBinding Control.Foreground}" Style="{DynamicResource MahApps.Metro.Styles.MetroWatermarkTextBlock}" Text="{TemplateBinding Controls:TextBoxHelper.Watermark}" TextBlock.TextAlignment="{TemplateBinding Controls:TextBoxHelper.WatermarkAlignment}" TextTrimming="{TemplateBinding Controls:TextBoxHelper.WatermarkTrimming}" TextWrapping="{TemplateBinding Controls:TextBoxHelper.WatermarkWrapping}" Visibility="Collapsed" />
              <ContentControl Name="PART_FloatingMessageContainer" Grid.Row="0" Grid.Column="0" Style="{DynamicResource FloatingMessageContainerStyle}">
                <ContentControl.Height>
                  <MultiBinding>
                    <MultiBinding.Converter>
                      <Converters:MathMultiplyConverter />
                    </MultiBinding.Converter>
                    <Binding ElementName="PART_FloatingMessage" Mode="OneWay" Path="ActualHeight" />
                    <Binding ElementName="PART_FloatingMessageContainer" Mode="OneWay" Path="Opacity" />
                  </MultiBinding>
                </ContentControl.Height>
                <TextBlock Name="PART_FloatingMessage" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" TextBlock.Foreground="{TemplateBinding Control.Foreground}" Style="{DynamicResource MetroAutoCollapsingTextBlock}" Text="{TemplateBinding Controls:TextBoxHelper.Watermark}" TextBlock.TextAlignment="{TemplateBinding Controls:TextBoxHelper.WatermarkAlignment}" TextTrimming="{TemplateBinding Controls:TextBoxHelper.WatermarkTrimming}">
                  <TextBlock.RenderTransform>
                    <TranslateTransform x:Name="FloatingMessageTransform">
                      <TranslateTransform.Y>
                        <MultiBinding>
                          <MultiBinding.Converter>
                            <Converters:MathSubtractConverter />
                          </MultiBinding.Converter>
                          <Binding ElementName="PART_FloatingMessage" Mode="OneWay" Path="ActualHeight" />
                          <Binding ElementName="PART_FloatingMessageContainer" Mode="OneWay" Path="ActualHeight" />
                        </MultiBinding>
                      </TranslateTransform.Y>
                    </TranslateTransform>
                  </TextBlock.RenderTransform>
                </TextBlock>
              </ContentControl>
              <Button Name="PART_ClearText" Grid.Row="0" Grid.RowSpan="2" Grid.Column="1" Width="{TemplateBinding Controls:TextBoxHelper.ButtonWidth}" Content="{TemplateBinding Controls:TextBoxHelper.ButtonContent}" ContentTemplate="{TemplateBinding Controls:TextBoxHelper.ButtonContentTemplate}" Focusable="False" FontFamily="{TemplateBinding Controls:TextBoxHelper.ButtonFontFamily}" FontSize="{TemplateBinding Controls:TextBoxHelper.ButtonFontSize}" Foreground="{TemplateBinding Control.Foreground}" IsTabStop="False" Style="{DynamicResource ChromelessButtonStyle}" Controls:TextBoxHelper.IsClearTextButtonBehaviorEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:TextBoxHelper.ClearTextButton), Mode=OneWay}" Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:TextBoxHelper.ClearTextButton), Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}" />
            </Grid>
            <Border Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" BorderBrush="{DynamicResource ControlsDisabledBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.DisabledVisualElementVisibility), Mode=OneWay}" />
          </Grid>
          <ControlTemplate.Triggers>
            <DataTrigger Value="Left" Binding="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:TextBoxHelper.ButtonsAlignment)}">
              <Setter TargetName="ButtonColumn" Property="ColumnDefinition.Width" Value="*" />
              <Setter TargetName="PART_ClearText" Property="Grid.Column" Value="0" />
              <Setter TargetName="PART_ContentHost" Property="Grid.Column" Value="1" />
              <Setter TargetName="PART_Message" Property="Grid.Column" Value="1" />
              <Setter TargetName="TextColumn" Property="ColumnDefinition.Width" Value="Auto" />
            </DataTrigger>
            <DataTrigger Value="" Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}">
              <Setter TargetName="PART_Message" Property="UIElement.Visibility" Value="Visible" />
            </DataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding Path=IsVisible, RelativeSource={RelativeSource Self}}" Value="True" />
                <Condition Binding="{Binding Path=(Controls:TextBoxHelper.UseFloatingWatermark), RelativeSource={RelativeSource Self}}" Value="True" />
                <Condition Binding="{Binding Path=(Controls:TextBoxHelper.HasText), RelativeSource={RelativeSource Self}}" Value="True" />
              </MultiDataTrigger.Conditions>
              <MultiDataTrigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource ShowFloatingMessageStoryboard}" />
              </MultiDataTrigger.EnterActions>
              <MultiDataTrigger.ExitActions>
                <BeginStoryboard Storyboard="{StaticResource HideFloatingMessageStoryboard}" />
              </MultiDataTrigger.ExitActions>
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:TextBoxHelper.ButtonsAlignment)}" Value="Right" />
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:TextBoxHelper.ClearTextButton)}" Value="False" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="PART_ContentHost" Property="Grid.ColumnSpan" Value="2" />
              <Setter TargetName="PART_Message" Property="Grid.ColumnSpan" Value="2" />
            </MultiDataTrigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="Base" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.MouseOverBorderBrush)}" Property="Border.BorderBrush" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter TargetName="DisabledVisualElement" Property="UIElement.Opacity" Value="0.6" />
            </Trigger>
            <Trigger Property="TextBoxBase.IsReadOnly" Value="True">
              <Setter TargetName="PART_ClearText" Property="UIElement.IsEnabled" Value="False" />
            </Trigger>
            <Trigger Property="UIElement.IsFocused" Value="True">
              <Setter TargetName="Base" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.FocusBorderBrush)}" Property="Border.BorderBrush" />
              <Setter TargetName="PART_FloatingMessage" Value="{DynamicResource AccentColorBrush}" Property="TextBlock.Foreground" />
              <Setter TargetName="PART_FloatingMessage" Property="UIElement.Opacity" Value="1" />
            </Trigger>
            <Trigger SourceName="PART_ClearText" Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="PART_ClearText" Value="{DynamicResource GrayBrush8}" Property="Control.Background" />
              <Setter TargetName="PART_ClearText" Value="{DynamicResource AccentColorBrush}" Property="Control.Foreground" />
            </Trigger>
            <Trigger SourceName="PART_ClearText" Property="ButtonBase.IsPressed" Value="True">
              <Setter TargetName="PART_ClearText" Value="{DynamicResource BlackBrush}" Property="Control.Background" />
              <Setter TargetName="PART_ClearText" Value="{DynamicResource WhiteBrush}" Property="Control.Foreground" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="Controls:TextBoxHelper.HasText" Value="False" />
                <Condition Property="UIElement.IsFocused" Value="True" />
              </MultiTrigger.Conditions>
              <MultiTrigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource enterGotFocus}" />
              </MultiTrigger.EnterActions>
              <MultiTrigger.ExitActions>
                <BeginStoryboard Storyboard="{StaticResource exitGotFocus}" />
              </MultiTrigger.ExitActions>
            </MultiTrigger>
            <Trigger Property="Controls:TextBoxHelper.HasText" Value="True">
              <Trigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource enterHasText}" />
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <BeginStoryboard Storyboard="{StaticResource exitHasText}" />
              </Trigger.ExitActions>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="UIElement.IsVisible" Value="True" />
                <Condition Property="Controls:TextBoxHelper.IsWaitingForData" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="PART_WaitingForDataEffectAdornerDecorator" Property="UIElement.Visibility" Value="Visible" />
              <MultiTrigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource WaitingForDataStoryboard}" />
              </MultiTrigger.EnterActions>
            </MultiTrigger>
            <Trigger Property="Controls:TextBoxHelper.IsWaitingForData" Value="False">
              <Setter TargetName="PART_WaitingForDataEffectAdornerDecorator" Property="UIElement.Visibility" Value="Collapsed" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource ValidationErrorTemplate}" />
  </Style>
  <Style x:Key="MetroButtonTextBox" BasedOn="{StaticResource MetroTextBox}" TargetType="{x:Type TextBox}">
    <Setter Property="Controls:TextBoxHelper.ButtonTemplate" Value="{DynamicResource ChromelessButtonTemplate}" />
    <Setter Property="Controls:TextBoxHelper.TextButton" Value="True" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TextBox}">
          <ControlTemplate.Resources>
            <Storyboard x:Key="enterGotFocus">
              <DoubleAnimation Storyboard.TargetName="PART_Message" Storyboard.TargetProperty="Opacity" To=".2" Duration="0:0:0.2" />
            </Storyboard>
            <Storyboard x:Key="exitGotFocus">
              <DoubleAnimation Storyboard.TargetName="PART_Message" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" />
            </Storyboard>
            <Storyboard x:Key="enterHasText">
              <DoubleAnimation Storyboard.TargetName="PART_Message" Storyboard.TargetProperty="Opacity" From=".2" To="0" Duration="0:0:0.2" />
            </Storyboard>
            <Storyboard x:Key="exitHasText">
              <DoubleAnimation Storyboard.TargetName="PART_Message" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" />
            </Storyboard>
          </ControlTemplate.Resources>
          <Grid>
            <AdornerDecorator Name="PART_WaitingForDataEffectAdornerDecorator" Visibility="Collapsed">
              <Border Name="PART_WaitingForDataEffectGrid" Background="{TemplateBinding Control.Background}" BorderBrush="#00FFFFFF" BorderThickness="{TemplateBinding Control.BorderThickness}" Effect="{DynamicResource WaitingForDataEffect}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
            </AdornerDecorator>
            <Border Name="Base" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
            <Grid Name="PART_InnerGrid" Margin="2">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Name="TextColumn" Width="*" />
                <ColumnDefinition Name="ButtonColumn" Width="Auto" />
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Name="ButtonRow" Height="*" />
              </Grid.RowDefinitions>
              <ScrollViewer Name="PART_ContentHost" Grid.Row="1" Grid.Column="0" Margin="2" VerticalAlignment="Stretch" BorderThickness="0" IsTabStop="False" Background="{x:Null}" />
              <TextBlock Name="PART_Message" Grid.Row="1" Grid.Column="0" Margin="6 2 6 2" Padding="{TemplateBinding Control.Padding}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" TextBlock.Foreground="{TemplateBinding Control.Foreground}" Style="{DynamicResource MahApps.Metro.Styles.MetroWatermarkTextBlock}" Text="{TemplateBinding Controls:TextBoxHelper.Watermark}" TextBlock.TextAlignment="{TemplateBinding Controls:TextBoxHelper.WatermarkAlignment}" TextTrimming="{TemplateBinding Controls:TextBoxHelper.WatermarkTrimming}" TextWrapping="{TemplateBinding Controls:TextBoxHelper.WatermarkWrapping}" Visibility="Collapsed" />
              <ContentControl Name="PART_FloatingMessageContainer" Grid.Row="0" Grid.Column="0" Style="{DynamicResource FloatingMessageContainerStyle}">
                <ContentControl.Height>
                  <MultiBinding>
                    <MultiBinding.Converter>
                      <Converters:MathMultiplyConverter />
                    </MultiBinding.Converter>
                    <Binding ElementName="PART_FloatingMessage" Mode="OneWay" Path="ActualHeight" />
                    <Binding ElementName="PART_FloatingMessageContainer" Mode="OneWay" Path="Opacity" />
                  </MultiBinding>
                </ContentControl.Height>
                <TextBlock Name="PART_FloatingMessage" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" TextBlock.Foreground="{TemplateBinding Control.Foreground}" Style="{DynamicResource MetroAutoCollapsingTextBlock}" Text="{TemplateBinding Controls:TextBoxHelper.Watermark}" TextBlock.TextAlignment="{TemplateBinding Controls:TextBoxHelper.WatermarkAlignment}" TextTrimming="{TemplateBinding Controls:TextBoxHelper.WatermarkTrimming}">
                  <TextBlock.RenderTransform>
                    <TranslateTransform x:Name="FloatingMessageTransform">
                      <TranslateTransform.Y>
                        <MultiBinding>
                          <MultiBinding.Converter>
                            <Converters:MathSubtractConverter />
                          </MultiBinding.Converter>
                          <Binding ElementName="PART_FloatingMessage" Mode="OneWay" Path="ActualHeight" />
                          <Binding ElementName="PART_FloatingMessageContainer" Mode="OneWay" Path="ActualHeight" />
                        </MultiBinding>
                      </TranslateTransform.Y>
                    </TranslateTransform>
                  </TextBlock.RenderTransform>
                </TextBlock>
              </ContentControl>
              <Button Name="PART_ClearText" Grid.Row="0" Grid.RowSpan="2" Grid.Column="1" Width="{TemplateBinding Controls:TextBoxHelper.ButtonWidth}" Controls:TextBoxHelper.IsClearTextButtonBehaviorEnabled="True" Content="{TemplateBinding Controls:TextBoxHelper.ButtonContent}" ContentTemplate="{TemplateBinding Controls:TextBoxHelper.ButtonContentTemplate}" Focusable="False" FontFamily="{TemplateBinding Controls:TextBoxHelper.ButtonFontFamily}" FontSize="{TemplateBinding Controls:TextBoxHelper.ButtonFontSize}" Foreground="{TemplateBinding Control.Foreground}" IsTabStop="False" Style="{DynamicResource ChromelessButtonStyle}" Template="{TemplateBinding Controls:TextBoxHelper.ButtonTemplate}" Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:TextBoxHelper.TextButton), Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}" />
            </Grid>
            <Border Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" BorderBrush="{DynamicResource ControlsDisabledBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.DisabledVisualElementVisibility), Mode=OneWay}" />
          </Grid>
          <ControlTemplate.Triggers>
            <DataTrigger Value="Left" Binding="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:TextBoxHelper.ButtonsAlignment)}">
              <Setter TargetName="ButtonColumn" Property="ColumnDefinition.Width" Value="*" />
              <Setter TargetName="PART_ClearText" Property="Grid.Column" Value="0" />
              <Setter TargetName="PART_ContentHost" Property="Grid.Column" Value="1" />
              <Setter TargetName="PART_Message" Property="Grid.Column" Value="1" />
              <Setter TargetName="TextColumn" Property="ColumnDefinition.Width" Value="Auto" />
            </DataTrigger>
            <DataTrigger Value="" Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}">
              <Setter TargetName="PART_Message" Property="UIElement.Visibility" Value="Visible" />
            </DataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding Path=IsVisible, RelativeSource={RelativeSource Self}}" Value="True" />
                <Condition Binding="{Binding Path=(Controls:TextBoxHelper.UseFloatingWatermark), RelativeSource={RelativeSource Self}}" Value="True" />
                <Condition Binding="{Binding Path=(Controls:TextBoxHelper.HasText), RelativeSource={RelativeSource Self}}" Value="True" />
              </MultiDataTrigger.Conditions>
              <MultiDataTrigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource ShowFloatingMessageStoryboard}" />
              </MultiDataTrigger.EnterActions>
              <MultiDataTrigger.ExitActions>
                <BeginStoryboard Storyboard="{StaticResource HideFloatingMessageStoryboard}" />
              </MultiDataTrigger.ExitActions>
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:TextBoxHelper.ButtonsAlignment)}" Value="Right" />
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:TextBoxHelper.TextButton)}" Value="False" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="PART_ContentHost" Property="Grid.ColumnSpan" Value="2" />
              <Setter TargetName="PART_Message" Property="Grid.ColumnSpan" Value="2" />
            </MultiDataTrigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="Base" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.MouseOverBorderBrush)}" Property="Border.BorderBrush" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter TargetName="DisabledVisualElement" Property="UIElement.Opacity" Value="0.6" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="TextBoxBase.IsReadOnly" Value="True" />
                <Condition Value="{x:Null}" Property="Controls:TextBoxHelper.ButtonCommand" />
              </MultiTrigger.Conditions>
              <Setter TargetName="PART_ClearText" Property="UIElement.IsEnabled" Value="False" />
            </MultiTrigger>
            <Trigger Property="UIElement.IsFocused" Value="True">
              <Setter TargetName="Base" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.FocusBorderBrush)}" Property="Border.BorderBrush" />
              <Setter TargetName="PART_FloatingMessage" Value="{DynamicResource AccentColorBrush}" Property="TextBlock.Foreground" />
              <Setter TargetName="PART_FloatingMessage" Property="UIElement.Opacity" Value="1" />
            </Trigger>
            <Trigger SourceName="PART_ClearText" Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="PART_ClearText" Value="{DynamicResource GrayBrush8}" Property="Control.Background" />
              <Setter TargetName="PART_ClearText" Value="{DynamicResource AccentColorBrush}" Property="Control.Foreground" />
            </Trigger>
            <Trigger SourceName="PART_ClearText" Property="ButtonBase.IsPressed" Value="True">
              <Setter TargetName="PART_ClearText" Value="{DynamicResource BlackBrush}" Property="Control.Background" />
              <Setter TargetName="PART_ClearText" Value="{DynamicResource WhiteBrush}" Property="Control.Foreground" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="UIElement.IsVisible" Value="True" />
                <Condition Property="Controls:TextBoxHelper.IsWaitingForData" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="PART_WaitingForDataEffectAdornerDecorator" Property="UIElement.Visibility" Value="Visible" />
              <MultiTrigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource WaitingForDataStoryboard}" />
              </MultiTrigger.EnterActions>
            </MultiTrigger>
            <Trigger Property="Controls:TextBoxHelper.IsWaitingForData" Value="False">
              <Setter TargetName="PART_WaitingForDataEffectAdornerDecorator" Property="UIElement.Visibility" Value="Collapsed" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ButtonCommandMetroTextBox" BasedOn="{StaticResource MetroButtonTextBox}" TargetType="{x:Type TextBox}" />
  <Style x:Key="SearchMetroTextBox" BasedOn="{StaticResource MetroButtonTextBox}" TargetType="{x:Type TextBox}">
    <Setter Property="Controls:TextBoxHelper.ButtonContentTemplate">
      <Setter.Value>
        <DataTemplate>
          <ContentControl Name="PART_PackIcon" Padding="3" HorizontalAlignment="Center" VerticalAlignment="Center" Content="M42.5,22A12.5,12.5 0 0,1 55,34.5A12.5,12.5 0 0,1 42.5,47C40.14,47 37.92,46.34 36,45.24L26.97,54.27C25.8,55.44 23.9,55.44 22.73,54.27C21.56,53.1 21.56,51.2 22.73,50.03L31.8,40.96C30.66,39.08 30,36.86 30,34.5A12.5,12.5 0 0,1 42.5,22M42.5,26A8.5,8.5 0 0,0 34,34.5A8.5,8.5 0 0,0 42.5,43A8.5,8.5 0 0,0 51,34.5A8.5,8.5 0 0,0 42.5,26Z" Style="{DynamicResource PathIconContentControlStyle}" Width="{Binding RelativeSource={RelativeSource AncestorType=TextBox}, Path=(Controls:TextBoxHelper.ButtonWidth), Mode=OneWay}" Height="{Binding RelativeSource={RelativeSource AncestorType=TextBox}, Path=(Controls:TextBoxHelper.ButtonWidth), Mode=OneWay}" />
        </DataTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MetroRichTextBox" TargetType="{x:Type RichTextBox}">
    <Style.Resources>
      <Style BasedOn="{StaticResource {x:Type Hyperlink}}" TargetType="{x:Type Hyperlink}">
        <Setter Property="TextElement.Foreground" Value="{DynamicResource AccentColorBrush}" />
        <Setter Property="Inline.TextDecorations" Value="Underline" />
        <Style.Triggers>
          <Trigger Property="ContentElement.IsMouseOver" Value="True">
            <Setter Property="TextElement.Foreground" Value="{DynamicResource HighlightBrush}" />
          </Trigger>
          <Trigger Property="ContentElement.IsEnabled" Value="False">
            <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
          </Trigger>
          <Trigger Property="ContentElement.IsEnabled" Value="True">
            <Setter Property="FrameworkContentElement.Cursor" Value="Hand" />
          </Trigger>
        </Style.Triggers>
      </Style>
    </Style.Resources>
    <Setter Property="UIElement.AllowDrop" Value="True" />
    <Setter Property="Control.Background" Value="{DynamicResource ControlBackgroundBrush}" />
    <Setter Property="Control.BorderBrush" Value="{DynamicResource TextBoxBorderBrush}" />
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="TextBoxBase.CaretBrush" Value="{DynamicResource BlackBrush}" />
    <Setter Property="FrameworkElement.ContextMenu" Value="{DynamicResource TextBoxMetroContextMenu}" />
    <Setter Property="Controls:ControlsHelper.FocusBorderBrush" Value="{DynamicResource TextBoxFocusBorderBrush}" />
    <Setter Property="Controls:ControlsHelper.MouseOverBorderBrush" Value="{DynamicResource TextBoxMouseOverBorderBrush}" />
    <Setter Property="Controls:TextBoxHelper.IsSpellCheckContextMenuEnabled" Value="{Binding RelativeSource={RelativeSource Self}, Path=(SpellCheck.IsEnabled)}" />
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="Control.FontFamily" Value="{DynamicResource ContentFontFamily}" />
    <Setter Property="Control.FontSize" Value="{DynamicResource ContentFontSize}" />
    <Setter Property="Control.Foreground" Value="{DynamicResource TextBrush}" />
    <Setter Property="FrameworkElement.MinHeight" Value="26" />
    <Setter Property="FrameworkElement.MinWidth" Value="10" />
    <Setter Property="Control.Padding" Value="1" />
    <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
    <Setter Property="TextBoxBase.SelectionBrush" Value="{DynamicResource HighlightBrush}" />
    <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TextBoxBase}">
          <Grid>
            <Border Name="Bd" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}">
              <ScrollViewer Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
            </Border>
            <Border Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" BorderBrush="{DynamicResource ControlsDisabledBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.DisabledVisualElementVisibility), Mode=OneWay}" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="Bd" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.MouseOverBorderBrush)}" Property="Border.BorderBrush" />
            </Trigger>
            <Trigger Property="UIElement.IsFocused" Value="True">
              <Setter TargetName="Bd" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.FocusBorderBrush)}" Property="Border.BorderBrush" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter TargetName="DisabledVisualElement" Property="UIElement.Opacity" Value="0.6" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>
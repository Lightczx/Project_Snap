<?xml version="1.0" encoding="utf-8"?>
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:Controls="clr-namespace:MahApps.Metro.Controls">
  <Style x:Key="MetroCheckBox" TargetType="{x:Type CheckBox}">
    <Setter Property="Control.Background" Value="{DynamicResource WhiteBrush}" />
    <Setter Property="Control.BorderBrush" Value="{DynamicResource CheckBoxBrush}" />
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="Controls:ControlsHelper.FocusBorderBrush" Value="{DynamicResource HighlightBrush}" />
    <Setter Property="Controls:ControlsHelper.MouseOverBorderBrush" Value="{DynamicResource CheckBoxMouseOverBrush}" />
    <Setter Property="Control.FontFamily" Value="{DynamicResource ContentFontFamily}" />
    <Setter Property="Control.FontSize" Value="{DynamicResource ContentFontSize}" />
    <Setter Property="Control.Foreground" Value="{DynamicResource LabelTextBrush}" />
    <Setter Property="Control.HorizontalContentAlignment" Value="Left" />
    <Setter Property="Control.Padding" Value="6 0 0 0" />
    <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type CheckBox}">
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Name="LeftCol" Width="18" />
              <ColumnDefinition Name="RightCol" Width="*" />
            </Grid.ColumnDefinitions>
            <Grid Name="PART_CHECKBOX">
              <Rectangle Margin="-6 0" Fill="{DynamicResource TransparentWhiteBrush}" />
              <Border Name="normal" Width="18" Height="18" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
              <Path Name="checkBox" Width="12" Height="10" Data="M1145.60717773438,430C1145.60717773438,430 1141.44995117188,435.077270507813 1141.44995117188,435.077270507813 1141.44995117188,435.077270507813 1139.23217773438,433.099975585938 1139.23217773438,433.099975585938 1139.23217773438,433.099975585938 1138,434.553833007813 1138,434.553833007813 1138,434.553833007813 1141.48217773438,438 1141.48217773438,438 1141.48217773438,438 1141.96875,437.9375 1141.96875,437.9375 1141.96875,437.9375 1147,431.34619140625 1147,431.34619140625 1147,431.34619140625 1145.60717773438,430 1145.60717773438,430z" Fill="{DynamicResource HighlightBrush}" Opacity="0" Stretch="Fill" UseLayoutRounding="False" />
              <Rectangle Name="IndeterminateCheck" Width="8" Height="3" Fill="{DynamicResource GrayBrush3}" Opacity="0" />
              <Border Name="disabled" Width="18" Height="18" Background="{DynamicResource SemiTransparentWhiteBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Opacity="0" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
            </Grid>
            <ContentPresenter Name="contentPresenter" Grid.Column="1" Margin="{TemplateBinding Control.Padding}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Content="{TemplateBinding ContentControl.Content}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentControl.ContentTemplateSelector}" RecognizesAccessKey="True" />
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)" To=".55" Duration="0" />
                    <DoubleAnimation Storyboard.TargetName="disabled" Storyboard.TargetProperty="(UIElement.Opacity)" To="1" Duration="0" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="CheckStates">
                <VisualState x:Name="Checked">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="checkBox" Storyboard.TargetProperty="(UIElement.Opacity)" To="1" Duration="0" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unchecked" />
                <VisualState x:Name="Indeterminate">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="IndeterminateCheck" Storyboard.TargetProperty="(UIElement.Opacity)" To="1" Duration="0" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="normal" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.MouseOverBorderBrush)}" Property="Border.BorderBrush" />
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
              <Setter TargetName="normal" Value="{DynamicResource HighlightBrush}" Property="Border.BorderBrush" />
            </Trigger>
            <Trigger Property="UIElement.IsFocused" Value="True">
              <Setter TargetName="normal" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.FocusBorderBrush)}" Property="Border.BorderBrush" />
            </Trigger>
            <Trigger Property="FrameworkElement.FlowDirection" Value="RightToLeft">
              <Setter TargetName="checkBox" Property="FrameworkElement.LayoutTransform">
                <Setter.Value>
                  <ScaleTransform ScaleX="-1" />
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="Controls:ToggleButtonHelper.ContentDirection" Value="RightToLeft">
              <Setter Property="Control.Padding" Value="0 0 6 0" />
              <Setter TargetName="LeftCol" Property="ColumnDefinition.Width" Value="*" />
              <Setter TargetName="PART_CHECKBOX" Property="Grid.Column" Value="1" />
              <Setter TargetName="RightCol" Property="ColumnDefinition.Width" Value="18" />
              <Setter TargetName="contentPresenter" Property="Grid.Column" Value="0" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Control.VerticalContentAlignment" Value="Center" />
  </Style>
</ResourceDictionary>
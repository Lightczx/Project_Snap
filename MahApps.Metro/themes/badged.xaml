<?xml version="1.0" encoding="utf-8"?>
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:controls="clr-namespace:MahApps.Metro.Controls">
  <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
  <SineEase x:Key="BadgeEase" EasingMode="EaseOut" />
  <Storyboard x:Key="BadgeChangedStoryboard">
    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)">
      <EasingDoubleKeyFrame KeyTime="0" Value="1.4" />
      <EasingDoubleKeyFrame EasingFunction="{StaticResource BadgeEase}" KeyTime="0:0:0.3" Value="1" />
    </DoubleAnimationUsingKeyFrames>
    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)">
      <EasingDoubleKeyFrame KeyTime="0" Value="1.4" />
      <EasingDoubleKeyFrame EasingFunction="{StaticResource BadgeEase}" KeyTime="0:0:0.3" Value="1" />
    </DoubleAnimationUsingKeyFrames>
  </Storyboard>
  <Style x:Key="{x:Type controls:Badged}" TargetType="{x:Type controls:Badged}">
    <Setter Property="BadgedEx.BadgeBackground" Value="{DynamicResource AccentBaseColorBrush}" />
    <Setter Property="controls:Badged.BadgeChangedStoryboard" Value="{StaticResource BadgeChangedStoryboard}" />
    <Setter Property="BadgedEx.BadgeForeground" Value="{DynamicResource IdealForegroundColorBrush}" />
    <Setter Property="BadgedEx.BadgePlacementMode" Value="TopRight" />
    <Setter Property="Control.HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="Control.IsTabStop" Value="False" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type controls:Badged}">
          <Grid>
            <Border Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}">
              <ContentPresenter Margin="{TemplateBinding Control.Padding}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Content="{TemplateBinding ContentControl.Content}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentControl.ContentTemplateSelector}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
            </Border>
            <Border Name="PART_BadgeContainer" MinWidth="18" MinHeight="18" Padding="2" HorizontalAlignment="Left" VerticalAlignment="Top" Background="{TemplateBinding BadgedEx.BadgeBackground}" CornerRadius="9" RenderTransformOrigin=".5,.5" TextElement.FontSize="11" TextElement.FontWeight="DemiBold" Visibility="{TemplateBinding IsBadgeSet, Converter={StaticResource BooleanToVisibilityConverter}}">
              <Border.RenderTransform>
                <ScaleTransform ScaleX="1" ScaleY="1" />
              </Border.RenderTransform>
              <ContentControl Margin="1 0 1 0" HorizontalAlignment="Center" VerticalAlignment="Center" Content="{TemplateBinding BadgedEx.Badge}" Focusable="False" Foreground="{TemplateBinding BadgedEx.BadgeForeground}" IsTabStop="False" />
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="BadgedEx.BadgePlacementMode" Value="TopLeft">
              <Setter TargetName="PART_BadgeContainer" Property="FrameworkElement.HorizontalAlignment" Value="Left" />
              <Setter TargetName="PART_BadgeContainer" Property="FrameworkElement.VerticalAlignment" Value="Top" />
            </Trigger>
            <Trigger Property="BadgedEx.BadgePlacementMode" Value="Top">
              <Setter TargetName="PART_BadgeContainer" Property="FrameworkElement.HorizontalAlignment" Value="Center" />
              <Setter TargetName="PART_BadgeContainer" Property="FrameworkElement.VerticalAlignment" Value="Top" />
            </Trigger>
            <Trigger Property="BadgedEx.BadgePlacementMode" Value="TopRight">
              <Setter TargetName="PART_BadgeContainer" Property="FrameworkElement.HorizontalAlignment" Value="Right" />
              <Setter TargetName="PART_BadgeContainer" Property="FrameworkElement.VerticalAlignment" Value="Top" />
            </Trigger>
            <Trigger Property="BadgedEx.BadgePlacementMode" Value="Right">
              <Setter TargetName="PART_BadgeContainer" Property="FrameworkElement.HorizontalAlignment" Value="Right" />
              <Setter TargetName="PART_BadgeContainer" Property="FrameworkElement.VerticalAlignment" Value="Center" />
            </Trigger>
            <Trigger Property="BadgedEx.BadgePlacementMode" Value="BottomRight">
              <Setter TargetName="PART_BadgeContainer" Property="FrameworkElement.HorizontalAlignment" Value="Right" />
              <Setter TargetName="PART_BadgeContainer" Property="FrameworkElement.VerticalAlignment" Value="Bottom" />
            </Trigger>
            <Trigger Property="BadgedEx.BadgePlacementMode" Value="Bottom">
              <Setter TargetName="PART_BadgeContainer" Property="FrameworkElement.HorizontalAlignment" Value="Center" />
              <Setter TargetName="PART_BadgeContainer" Property="FrameworkElement.VerticalAlignment" Value="Bottom" />
            </Trigger>
            <Trigger Property="BadgedEx.BadgePlacementMode" Value="BottomLeft">
              <Setter TargetName="PART_BadgeContainer" Property="FrameworkElement.HorizontalAlignment" Value="Left" />
              <Setter TargetName="PART_BadgeContainer" Property="FrameworkElement.VerticalAlignment" Value="Bottom" />
            </Trigger>
            <Trigger Property="BadgedEx.BadgePlacementMode" Value="Left">
              <Setter TargetName="PART_BadgeContainer" Property="FrameworkElement.HorizontalAlignment" Value="Left" />
              <Setter TargetName="PART_BadgeContainer" Property="FrameworkElement.VerticalAlignment" Value="Center" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter TargetName="PART_BadgeContainer" Value="{DynamicResource MahApps.Metro.Brushes.Badged.DisabledBackgroundBrush}" Property="Border.Background" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Control.VerticalContentAlignment" Value="Stretch" />
  </Style>
</ResourceDictionary>
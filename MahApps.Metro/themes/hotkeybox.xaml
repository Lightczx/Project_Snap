<?xml version="1.0" encoding="utf-8"?>
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:Controls="clr-namespace:MahApps.Metro.Controls" xmlns:Converters="clr-namespace:MahApps.Metro.Converters">
  <Style x:Key="{x:Type Controls:HotKeyBox}" TargetType="{x:Type Controls:HotKeyBox}">
    <Setter Property="Control.Background" Value="{DynamicResource ControlBackgroundBrush}" />
    <Setter Property="Control.BorderBrush" Value="{DynamicResource TextBoxBorderBrush}" />
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper" />
    <Setter Property="Controls:ControlsHelper.FocusBorderBrush" Value="{DynamicResource TextBoxFocusBorderBrush}" />
    <Setter Property="Controls:ControlsHelper.MouseOverBorderBrush" Value="{DynamicResource TextBoxMouseOverBorderBrush}" />
    <Setter Property="Controls:TextBoxHelper.ButtonFontSize" Value="{DynamicResource ClearTextButtonFontSize}" />
    <Setter Property="Controls:TextBoxHelper.Watermark" Value="{Binding RelativeSource={RelativeSource Self}, Path=Watermark, Mode=OneWay}" />
    <Setter Property="Control.FontFamily" Value="{DynamicResource ContentFontFamily}" />
    <Setter Property="Control.FontSize" Value="{DynamicResource ContentFontSize}" />
    <Setter Property="Control.Foreground" Value="{DynamicResource TextBrush}" />
    <Setter Property="FrameworkElement.MinHeight" Value="26" />
    <Setter Property="Control.Padding" Value="0" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden" />
    <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Controls:HotKeyBox}">
          <TextBox Name="PART_TextBox" MinHeight="{TemplateBinding FrameworkElement.MinHeight}" Padding="{TemplateBinding Control.Padding}" HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}" Controls:ControlsHelper.FocusBorderBrush="{TemplateBinding Controls:ControlsHelper.FocusBorderBrush}" Controls:ControlsHelper.MouseOverBorderBrush="{TemplateBinding Controls:ControlsHelper.MouseOverBorderBrush}" Controls:TextBoxHelper.ButtonContent="{TemplateBinding Controls:TextBoxHelper.ButtonContent}" Controls:TextBoxHelper.ButtonContentTemplate="{TemplateBinding Controls:TextBoxHelper.ButtonContentTemplate}" Controls:TextBoxHelper.ButtonFontFamily="{TemplateBinding Controls:TextBoxHelper.ButtonFontFamily}" Controls:TextBoxHelper.ButtonFontSize="{TemplateBinding Controls:TextBoxHelper.ButtonFontSize}" Controls:TextBoxHelper.ButtonWidth="{TemplateBinding Controls:TextBoxHelper.ButtonWidth}" Controls:TextBoxHelper.ButtonsAlignment="{TemplateBinding Controls:TextBoxHelper.ButtonsAlignment}" Controls:TextBoxHelper.ClearTextButton="{TemplateBinding Controls:TextBoxHelper.ClearTextButton}" Controls:TextBoxHelper.IsWaitingForData="{TemplateBinding Controls:TextBoxHelper.IsWaitingForData}" Controls:TextBoxHelper.SelectAllOnFocus="{TemplateBinding Controls:TextBoxHelper.SelectAllOnFocus}" Controls:TextBoxHelper.UseFloatingWatermark="{TemplateBinding Controls:TextBoxHelper.UseFloatingWatermark}" Controls:TextBoxHelper.Watermark="{TemplateBinding Controls:TextBoxHelper.Watermark}" Controls:TextBoxHelper.WatermarkAlignment="{TemplateBinding Controls:TextBoxHelper.WatermarkAlignment}" Controls:TextBoxHelper.WatermarkTrimming="{TemplateBinding Controls:TextBoxHelper.WatermarkTrimming}" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Focusable="{TemplateBinding UIElement.Focusable}" FontFamily="{TemplateBinding Control.FontFamily}" FontSize="{TemplateBinding Control.FontSize}" Foreground="{TemplateBinding Control.Foreground}" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" IsTabStop="{TemplateBinding Control.IsTabStop}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Text="{TemplateBinding Controls:HotKeyBox.Text}" Validation.ErrorTemplate="{TemplateBinding Validation.ErrorTemplate}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" />
          <ControlTemplate.Triggers>
            <Trigger Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Normal">
              <Setter TargetName="PART_TextBox" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Text, Mode=OneWay}" Property="TextBox.Text" />
            </Trigger>
            <Trigger Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper">
              <Setter TargetName="PART_TextBox">
                <Setter.Value>
                  <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="Text">
                    <Binding.Converter>
                      <Converters:ToUpperConverter />
                    </Binding.Converter>
                    <Binding.Mode>OneWay</Binding.Mode>
                  </Binding>
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Lower">
              <Setter TargetName="PART_TextBox">
                <Setter.Value>
                  <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="Text">
                    <Binding.Converter>
                      <Converters:ToLowerConverter />
                    </Binding.Converter>
                    <Binding.Mode>OneWay</Binding.Mode>
                  </Binding>
                </Setter.Value>
              </Setter>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource ValidationErrorTemplate}" />
  </Style>
</ResourceDictionary>
<?xml version="1.0" encoding="utf-8"?>
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:Controls="clr-namespace:MahApps.Metro.Controls">
  <ControlTemplate x:Key="SplitButtonHorizontal" TargetType="{x:Type Controls:SplitButton}">
    <Grid UseLayoutRounding="True">
      <Border Name="PART_Border" Background="#00FFFFFF" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="{TemplateBinding Controls:ControlsHelper.CornerRadius}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}">
        <Controls:ClipBorder x:Name="PART_ClipBorder" CornerRadius="{TemplateBinding Controls:ControlsHelper.CornerRadius}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}">
          <Grid Name="PART_Container" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Button Name="PART_Button" Grid.Column="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" Command="{TemplateBinding Controls:SplitButton.Command}" CommandParameter="{TemplateBinding Controls:SplitButton.CommandParameter}" CommandTarget="{TemplateBinding Controls:SplitButton.CommandTarget}" FocusVisualStyle="{TemplateBinding FrameworkElement.FocusVisualStyle}" Foreground="{TemplateBinding Control.Foreground}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Style="{TemplateBinding Controls:SplitButton.ButtonStyle}">
              <StackPanel HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Orientation="Horizontal">
                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Content="{TemplateBinding Controls:SplitButton.Icon}" ContentTemplate="{TemplateBinding Controls:SplitButton.IconTemplate}" Focusable="False" RecognizesAccessKey="True" UseLayoutRounding="False" />
                <Controls:ContentControlEx x:Name="PART_ButtonContent" Margin="2" Padding="{TemplateBinding Control.Padding}" HorizontalAlignment="Center" VerticalAlignment="Center" HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}" ContentStringFormat="{TemplateBinding ItemsControl.ItemStringFormat}" ContentTemplate="{TemplateBinding ItemsControl.ItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemsControl.ItemTemplateSelector}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" UseLayoutRounding="False" Content="{Binding SelectedItem, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.ContentCharacterCasing)}" />
              </StackPanel>
            </Button>
            <Button Name="PART_Expander" Grid.Column="1" Width="20" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" FocusVisualStyle="{TemplateBinding FrameworkElement.FocusVisualStyle}" Foreground="{TemplateBinding Controls:SplitButton.ArrowBrush}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Style="{TemplateBinding Controls:SplitButton.ButtonArrowStyle}">
              <ContentControl Width="9" Height="9" Content="M7.41,8.58L12,13.17L16.59,8.58L18,10L12,16L6,10L7.41,8.58Z" Style="{DynamicResource PathIconContentControlStyle}" />
            </Button>
          </Grid>
        </Controls:ClipBorder>
      </Border>
      <Popup Name="PART_Popup" AllowsTransparency="True" Focusable="False" PopupAnimation="Fade" StaysOpen="True" IsOpen="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" PlacementTarget="{Binding ElementName=PART_Border}">
        <ListBox Name="PART_ListBox" Margin="0" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" DisplayMemberPath="{TemplateBinding ItemsControl.DisplayMemberPath}" IsSelected="{TemplateBinding Selector.IsSelected}" IsSynchronizedWithCurrentItem="{TemplateBinding Selector.IsSynchronizedWithCurrentItem}" ItemContainerStyle="{TemplateBinding ItemsControl.ItemContainerStyle}" ItemContainerStyleSelector="{TemplateBinding ItemsControl.ItemContainerStyleSelector}" ItemStringFormat="{TemplateBinding ItemsControl.ItemStringFormat}" ItemTemplate="{TemplateBinding ItemsControl.ItemTemplate}" ItemTemplateSelector="{TemplateBinding ItemsControl.ItemTemplateSelector}" ItemsPanel="{TemplateBinding ItemsControl.ItemsPanel}" ItemsSource="{TemplateBinding ItemsControl.ItemsSource}" RenderOptions.ClearTypeHint="{TemplateBinding RenderOptions.ClearTypeHint}" SelectedValuePath="{TemplateBinding Selector.SelectedValuePath}" SelectionMode="Single" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Style="{TemplateBinding Controls:SplitButton.ListBoxStyle}" MinWidth="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}" SelectedIndex="{Binding SelectedIndex, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" SelectedItem="{Binding SelectedItem, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" SelectedValue="{Binding SelectedValue, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
      </Popup>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="UIElement.IsMouseOver" Value="True">
        <Setter TargetName="PART_Expander" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ArrowMouseOverBrush, Mode=OneWay}" Property="Control.Foreground" />
      </Trigger>
      <Trigger SourceName="PART_Expander" Property="ButtonBase.IsPressed" Value="True">
        <Setter TargetName="PART_Expander" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ArrowPressedBrush, Mode=OneWay}" Property="Control.Foreground" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="SplitButtonVertical" TargetType="{x:Type Controls:SplitButton}">
    <Grid UseLayoutRounding="True">
      <Border Name="PART_Border" Background="#00FFFFFF" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="{TemplateBinding Controls:ControlsHelper.CornerRadius}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}">
        <Controls:ClipBorder x:Name="PART_ClipBorder" CornerRadius="{TemplateBinding Controls:ControlsHelper.CornerRadius}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}">
          <Grid Name="PART_Container" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <Grid.RowDefinitions>
              <RowDefinition Height="*" />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Button Name="PART_Button" Grid.Row="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" Command="{TemplateBinding Controls:SplitButton.Command}" CommandParameter="{TemplateBinding Controls:SplitButton.CommandParameter}" CommandTarget="{TemplateBinding Controls:SplitButton.CommandTarget}" FocusVisualStyle="{TemplateBinding FrameworkElement.FocusVisualStyle}" Foreground="{TemplateBinding Control.Foreground}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Style="{TemplateBinding Controls:SplitButton.ButtonStyle}">
              <StackPanel HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Orientation="Vertical">
                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Content="{TemplateBinding Controls:SplitButton.Icon}" ContentTemplate="{TemplateBinding Controls:SplitButton.IconTemplate}" Focusable="False" RecognizesAccessKey="True" UseLayoutRounding="False" />
                <Controls:ContentControlEx x:Name="PART_ButtonContent" Margin="2" Padding="{TemplateBinding Control.Padding}" HorizontalAlignment="Center" VerticalAlignment="Center" HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}" ContentStringFormat="{TemplateBinding ItemsControl.ItemStringFormat}" ContentTemplate="{TemplateBinding ItemsControl.ItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemsControl.ItemTemplateSelector}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" UseLayoutRounding="False" Content="{Binding SelectedItem, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.ContentCharacterCasing)}" />
              </StackPanel>
            </Button>
            <Button Name="PART_Expander" Grid.Row="1" Height="20" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" FocusVisualStyle="{TemplateBinding FrameworkElement.FocusVisualStyle}" Foreground="{TemplateBinding Controls:SplitButton.ArrowBrush}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Style="{TemplateBinding Controls:SplitButton.ButtonArrowStyle}">
              <ContentControl Width="9" Height="9" Content="M7.41,8.58L12,13.17L16.59,8.58L18,10L12,16L6,10L7.41,8.58Z" Style="{DynamicResource PathIconContentControlStyle}" />
            </Button>
          </Grid>
        </Controls:ClipBorder>
      </Border>
      <Popup Name="PART_Popup" AllowsTransparency="True" Focusable="False" PopupAnimation="Fade" StaysOpen="True" IsOpen="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" PlacementTarget="{Binding ElementName=PART_Border}">
        <ListBox Name="PART_ListBox" Margin="0" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" DisplayMemberPath="{TemplateBinding ItemsControl.DisplayMemberPath}" IsSelected="{TemplateBinding Selector.IsSelected}" IsSynchronizedWithCurrentItem="{TemplateBinding Selector.IsSynchronizedWithCurrentItem}" ItemContainerStyle="{TemplateBinding ItemsControl.ItemContainerStyle}" ItemContainerStyleSelector="{TemplateBinding ItemsControl.ItemContainerStyleSelector}" ItemStringFormat="{TemplateBinding ItemsControl.ItemStringFormat}" ItemTemplate="{TemplateBinding ItemsControl.ItemTemplate}" ItemTemplateSelector="{TemplateBinding ItemsControl.ItemTemplateSelector}" ItemsPanel="{TemplateBinding ItemsControl.ItemsPanel}" ItemsSource="{TemplateBinding ItemsControl.ItemsSource}" RenderOptions.ClearTypeHint="{TemplateBinding RenderOptions.ClearTypeHint}" SelectedValuePath="{TemplateBinding Selector.SelectedValuePath}" SelectionMode="Single" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Style="{TemplateBinding Controls:SplitButton.ListBoxStyle}" MinWidth="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}" SelectedIndex="{Binding SelectedIndex, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" SelectedItem="{Binding SelectedItem, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" SelectedValue="{Binding SelectedValue, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
      </Popup>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="UIElement.IsMouseOver" Value="True">
        <Setter TargetName="PART_Expander" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ArrowMouseOverBrush, Mode=OneWay}" Property="Control.Foreground" />
      </Trigger>
      <Trigger SourceName="PART_Expander" Property="ButtonBase.IsPressed" Value="True">
        <Setter TargetName="PART_Expander" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ArrowPressedBrush, Mode=OneWay}" Property="Control.Foreground" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="ButtonSplitFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="1" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeDashArray="1 2" StrokeThickness="1" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type Controls:SplitButton}" TargetType="{x:Type Controls:SplitButton}">
    <Setter Property="Controls:SplitButton.ArrowBrush" Value="{DynamicResource BlackColorBrush}" />
    <Setter Property="Controls:SplitButton.ArrowMouseOverBrush" Value="{DynamicResource AccentColorBrush}" />
    <Setter Property="Controls:SplitButton.ArrowPressedBrush" Value="{DynamicResource BlackColorBrush}" />
    <Setter Property="Control.Background" Value="{DynamicResource WhiteColorBrush}" />
    <Setter Property="Control.BorderBrush" Value="{DynamicResource BlackColorBrush}" />
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="Controls:SplitButton.ButtonArrowStyle" Value="{DynamicResource ButtonSplitArrowStyle}" />
    <Setter Property="Controls:SplitButton.ButtonStyle" Value="{DynamicResource ButtonSplitStyle}" />
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ButtonSplitFocusVisual}" />
    <Setter Property="UIElement.Focusable" Value="False" />
    <Setter Property="Control.FontFamily" Value="{DynamicResource ContentFontFamily}" />
    <Setter Property="Control.FontSize" Value="{DynamicResource ContentFontSize}" />
    <Setter Property="Control.Foreground" Value="{DynamicResource BlackColorBrush}" />
    <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
    <Setter Property="Controls:SplitButton.ListBoxStyle" Value="{DynamicResource VirtualisedMetroListBox}" />
    <Setter Property="FrameworkElement.MinHeight" Value="26" />
    <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
    <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
    <Setter Property="Control.Template" Value="{StaticResource SplitButtonHorizontal}" />
    <Setter Property="Control.VerticalContentAlignment" Value="Center" />
    <Style.Triggers>
      <Trigger Property="Controls:SplitButton.Orientation" Value="Vertical">
        <Setter Property="Control.Template" Value="{StaticResource SplitButtonVertical}" />
      </Trigger>
      <Trigger Property="UIElement.IsFocused" Value="True">
        <Setter Property="Control.BorderBrush" Value="{DynamicResource AccentColorBrush}" />
      </Trigger>
      <Trigger Property="UIElement.IsKeyboardFocusWithin" Value="True">
        <Setter Property="Control.BorderBrush" Value="{DynamicResource AccentColorBrush}" />
      </Trigger>
      <Trigger Property="UIElement.IsEnabled" Value="False">
        <Setter Property="UIElement.Opacity" Value=".55" />
      </Trigger>
    </Style.Triggers>
  </Style>
</ResourceDictionary>